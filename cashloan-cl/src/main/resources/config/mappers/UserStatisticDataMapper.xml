<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_user_statistic_data表:用户统计数据模块 -->
<mapper namespace="com.xiji.cashloan.cl.mapper.statistic.UserStatisticDataMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.xiji.cashloan.cl.domain.statistic.UserStatisticData">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="count_time" property="countTime" jdbcType="TIMESTAMP" />
        <result column="user_register" property="userRegister" jdbcType="INTEGER" />
        <result column="auth_count" property="authCount" jdbcType="INTEGER" />
        <result column="contact_count" property="contactCount" jdbcType="INTEGER" />
        <result column="bank_count" property="bankCount" jdbcType="INTEGER" />
        <result column="phone_count" property="phoneCount" jdbcType="INTEGER" />
        <result column="borrow_apply_count" property="borrowApplyCount" jdbcType="INTEGER" />
        <result column="new_borrow_count" property="newBorrowCount" jdbcType="INTEGER" />
        <result column="old_borrow_count" property="oldBorrowCount" jdbcType="INTEGER" />
        <result column="new_load_count" property="newLoadCount" jdbcType="INTEGER" />
        <result column="old_load_count" property="oldLoadCount" jdbcType="INTEGER" />
        <result column="load_count" property="loadCount" jdbcType="INTEGER" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,create_time,update_time,count_time,user_register,auth_count,contact_count,bank_count,phone_count,borrow_apply_count,new_borrow_count,old_borrow_count,new_load_count,old_load_count,load_count 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="countTime != null">
                and count_time = #{countTime,jdbcType=TIMESTAMP}
            </if>
            <if test="userRegister != null">
                and user_register = #{userRegister,jdbcType=INTEGER}
            </if>
            <if test="authCount != null">
                and auth_count = #{authCount,jdbcType=INTEGER}
            </if>
            <if test="contactCount != null">
                and contact_count = #{contactCount,jdbcType=INTEGER}
            </if>
            <if test="bankCount != null">
                and bank_count = #{bankCount,jdbcType=INTEGER}
            </if>
            <if test="phoneCount != null">
                and phone_count = #{phoneCount,jdbcType=INTEGER}
            </if>
            <if test="borrowApplyCount != null">
                and borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER}
            </if>
            <if test="newBorrowCount != null">
                and new_borrow_count = #{newBorrowCount,jdbcType=INTEGER}
            </if>
            <if test="oldBorrowCount != null">
                and old_borrow_count = #{oldBorrowCount,jdbcType=INTEGER}
            </if>
            <if test="newLoadCount != null">
                and new_load_count = #{newLoadCount,jdbcType=INTEGER}
            </if>
            <if test="oldLoadCount != null">
                and old_load_count = #{oldLoadCount,jdbcType=INTEGER}
            </if>
            <if test="loadCount != null">
                and load_count = #{loadCount,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.xiji.cashloan.cl.domain.statistic.UserStatisticData">
        insert into cl_user_statistic_data(create_time,update_time,count_time,user_register,auth_count,contact_count,bank_count,phone_count,borrow_apply_count,new_borrow_count,old_borrow_count,new_load_count,old_load_count,load_count)values(#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{countTime,jdbcType=TIMESTAMP},#{userRegister,jdbcType=INTEGER},#{authCount,jdbcType=INTEGER},#{contactCount,jdbcType=INTEGER},#{bankCount,jdbcType=INTEGER},#{phoneCount,jdbcType=INTEGER},#{borrowApplyCount,jdbcType=INTEGER},#{newBorrowCount,jdbcType=INTEGER},#{oldBorrowCount,jdbcType=INTEGER},#{newLoadCount,jdbcType=INTEGER},#{oldLoadCount,jdbcType=INTEGER},#{loadCount,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.xiji.cashloan.cl.domain.statistic.UserStatisticData">
        update cl_user_statistic_data set 
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            count_time = #{countTime,jdbcType=TIMESTAMP},
            user_register = #{userRegister,jdbcType=INTEGER},
            auth_count = #{authCount,jdbcType=INTEGER},
            contact_count = #{contactCount,jdbcType=INTEGER},
            bank_count = #{bankCount,jdbcType=INTEGER},
            phone_count = #{phoneCount,jdbcType=INTEGER},
            borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER},
            new_borrow_count = #{newBorrowCount,jdbcType=INTEGER},
            old_borrow_count = #{oldBorrowCount,jdbcType=INTEGER},
            new_load_count = #{newLoadCount,jdbcType=INTEGER},
            old_load_count = #{oldLoadCount,jdbcType=INTEGER},
            load_count = #{loadCount,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_user_statistic_data
          <set>
            <if test="createTime != null">        
                create_time = #{createTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="updateTime != null">        
                update_time = #{updateTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="countTime != null">        
                count_time = #{countTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="userRegister != null">        
                user_register = #{userRegister,jdbcType=INTEGER},                
            </if>
            <if test="authCount != null">        
                auth_count = #{authCount,jdbcType=INTEGER},                
            </if>
            <if test="contactCount != null">        
                contact_count = #{contactCount,jdbcType=INTEGER},                
            </if>
            <if test="bankCount != null">        
                bank_count = #{bankCount,jdbcType=INTEGER},                
            </if>
            <if test="phoneCount != null">        
                phone_count = #{phoneCount,jdbcType=INTEGER},                
            </if>
            <if test="borrowApplyCount != null">        
                borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER},                
            </if>
            <if test="newBorrowCount != null">        
                new_borrow_count = #{newBorrowCount,jdbcType=INTEGER},                
            </if>
            <if test="oldBorrowCount != null">        
                old_borrow_count = #{oldBorrowCount,jdbcType=INTEGER},                
            </if>
            <if test="newLoadCount != null">        
                new_load_count = #{newLoadCount,jdbcType=INTEGER},                
            </if>
            <if test="oldLoadCount != null">        
                old_load_count = #{oldLoadCount,jdbcType=INTEGER},                
            </if>
            <if test="loadCount != null">        
                load_count = #{loadCount,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_user_statistic_data
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_user_statistic_data
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_user_statistic_data
        <include refid="searchBy"/>
    </select>

    <insert id="saveSelective" parameterType="com.xiji.cashloan.cl.domain.statistic.UserStatisticData">
        insert into cl_user_statistic_data
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="countTime != null">
                count_time,
            </if>
            <if test="userRegister != null">
                user_register,
            </if>
            <if test="authCount != null">
                auth_count,
            </if>
            <if test="contactCount != null">
                contact_count,
            </if>
            <if test="bankCount != null">
                bank_count,
            </if>
            <if test="phoneCount != null">
                phone_count,
            </if>
            <if test="borrowApplyCount != null">
                borrow_apply_count,
            </if>
            <if test="newBorrowCount != null">
                new_borrow_count,
            </if>
            <if test="oldBorrowCount != null">
                old_borrow_count,
            </if>
            <if test="newLoadCount != null">
                new_load_count,
            </if>
            <if test="oldLoadCount != null">
                old_load_count,
            </if>
            <if test="loadCount != null">
                load_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="countTime != null">
                #{countTime,jdbcType=TIMESTAMP},
            </if>
            <if test="userRegister != null">
                #{userRegister,jdbcType=INTEGER},
            </if>
            <if test="authCount != null">
                #{authCount,jdbcType=INTEGER},
            </if>
            <if test="contactCount != null">
                #{contactCount,jdbcType=INTEGER},
            </if>
            <if test="bankCount != null">
                #{bankCount,jdbcType=INTEGER},
            </if>
            <if test="phoneCount != null">
                #{phoneCount,jdbcType=INTEGER},
            </if>
            <if test="borrowApplyCount != null">
                #{borrowApplyCount,jdbcType=INTEGER},
            </if>
            <if test="newBorrowCount != null">
                #{newBorrowCount,jdbcType=INTEGER},
            </if>
            <if test="oldBorrowCount != null">
                #{oldBorrowCount,jdbcType=INTEGER},
            </if>
            <if test="newLoadCount != null">
                #{newLoadCount,jdbcType=INTEGER},
            </if>
            <if test="oldLoadCount != null">
                #{oldLoadCount,jdbcType=INTEGER},
            </if>
            <if test="loadCount != null">
                #{loadCount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <select id="getLateDate" resultType="java.util.Date">

        select count_time from cl_user_statistic_data order by count_time desc limit 1;
    </select>


    <!--注册人数、实名认证人数、通讯录认证人数、当日绑卡人数、当日运营商认证人数、申请总数、新客借款，老客借款，放款笔数，当日新客放款，当日老客放款 -->
    <select id="listUserStatisticData" resultType="com.xiji.cashloan.cl.domain.statistic.UserStatisticData" parameterType="java.util.HashMap">


        select  distinct T.countTime,
        T.userRegister,
        T.authCount,
        T.contactCount,
        T.bankCount,
        T.phoneCount,
        T.borrowApplyCount,
        T.newBorrowCount,
        T.oldBorrowCount,
        T.loadCount,
        T.newLoadCount,
        T.oldLoadCount
        from (
        select DATE_FORMAT(p.time,'%Y-%m-%d') countTime,
        IFNULL(p2.userRegister,0) userRegister,
        IFNULL(p3.authCount,0) authCount,
        IFNULL(p4.contactCount,0) contactCount,
        IFNULL(p5.bankCount,0) bankCount,
        IFNULL(p6.phoneCount,0) phoneCount,
        IFNULL(p7.borrowApplyCount,0) borrowApplyCount,
        IFNULL(p8.newBorrowCount,0) newBorrowCount,
        IFNULL(p9.oldBorrowCount,0) oldBorrowCount,
        IFNULL(p10.loadCount,0) loadCount,
        IFNULL(p11.newLoadCount,0) newLoadCount,
        IFNULL(p12.oldLoadCount,0) oldLoadCount
        from (
        (SELECT COUNT(id) userRegister,DATE_FORMAT(regist_time,'%Y-%m-%d') time from cl_user t2 GROUP BY time ) UNION
        (SELECT COUNT(id) authCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.id_state = '30') t2 GROUP BY time )UNION
        (SELECT COUNT(id) contactCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.contact_state = '30') t2 GROUP BY time ) UNION
        (SELECT COUNT(id) bankCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.bank_card_state = '30') t2 GROUP BY time )UNION
        (SELECT COUNT(id) phoneCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.phone_state = '30') t2 GROUP BY time ) UNION
        (SELECT COUNT(id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow ) t2 GROUP BY time ) UNION
        (SELECT COUNT(id) newBorrowCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow where again='10') t2 GROUP BY time ) UNION
        (SELECT COUNT(id) oldBorrowCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow where again='20') t2 GROUP BY time ) UNION

        (SELECT COUNT(id) loadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id ) t2 GROUP BY time) UNION
        (SELECT COUNT(id) newLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id and borrow.again ='10') t2 GROUP BY time) UNION
        (SELECT COUNT(id) oldLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id and borrow.again ='20') t2 GROUP BY time)

        ) p
        left join (SELECT COUNT(id) userRegister,DATE_FORMAT(regist_time,'%Y-%m-%d') time from cl_user t2 GROUP BY time ) p2 on p.time = p2.time
        left join (SELECT COUNT(id) authCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.id_state = '30') t2 GROUP BY time ) p3 on p.time = p3.time
        left join (SELECT COUNT(id) contactCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.contact_state = '30') t2 GROUP BY time  ) p4 on p.time = p4.time
        left join (SELECT COUNT(id) bankCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.bank_card_state = '30') t2 GROUP BY time  ) p5 on p.time = p5.time
        left join (SELECT COUNT(id) phoneCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.phone_state = '30') t2 GROUP BY time ) p6 on p.time = p6.time

        left join (SELECT COUNT(id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow ) t2 GROUP BY time ) p7 on p.time = p7.time
        left join (SELECT COUNT(id) newBorrowCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow where again='10') t2 GROUP BY time ) p8 on p.time = p8.time
        left join (SELECT COUNT(id) oldBorrowCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow where again='20') t2 GROUP BY time) p9 on p.time = p9.time

        left join (SELECT COUNT(id) loadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id ) t2 GROUP BY time) p10 on p.time = p10.time
        left join (SELECT COUNT(id) newLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id and borrow.again ='10') t2 GROUP BY time) p11 on p.time = p11.time
        left join (SELECT COUNT(id) oldLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id and borrow.again ='20') t2 GROUP BY time) p12 on p.time = p12.time
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(p.time, '%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(p.time, '%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>

        ) T ORDER BY T.countTime ASC

    </select>

    <select id="listUserStatistic" resultMap="BaseResultMap" parameterType="java.util.HashMap">

        select * from cl_user_statistic_data
        <where>
            <if test="startDate != null and startDate != ''">
                and DATE_FORMAT(count_time,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate != null and endDate != ''">
                <![CDATA[ and DATE_FORMAT(count_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
       order by count_time desc
    </select>

    <select id="loanCount" resultMap="BaseResultMap" parameterType="java.util.HashMap">
         SELECT
			count(borrow.id) as loadCount,
			DATE_FORMAT(borrow.create_time, '%Y-%m-%d') as countTime
		FROM
			cl_borrow AS borrow,
			cl_borrow_progress AS progress
		WHERE
			progress.state = '30'
		AND borrow.id = progress.borrow_id
		<if test="again != null and again != ''">
            AND borrow.again = #{again}
        </if>

        <if test="startDate != null and startDate != ''">
            and DATE_FORMAT(borrow.create_time,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
        </if>
        <if test="endDate != null and endDate != ''">
            <![CDATA[ and DATE_FORMAT(borrow.create_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
        </if>
        GROUP BY countTime
    </select>


</mapper>
