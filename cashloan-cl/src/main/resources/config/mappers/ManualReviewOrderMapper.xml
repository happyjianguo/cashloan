<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_manual_review_order表:人工审核订单模块 -->
<mapper namespace="com.xiji.cashloan.cl.mapper.ManualReviewOrderMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.xiji.cashloan.cl.domain.ManualReviewOrder">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="borrow_name" property="borrowName" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="borrow_id" property="borrowId" jdbcType="BIGINT" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="review_time" property="reviewTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <resultMap id="manualReviewCountResultMap" type="com.xiji.cashloan.cl.model.ManualReviewCountModel">
        <id column="id" property="userId" jdbcType="BIGINT" />
        <result column="name" property="name" />
        <result column="user_name" property="userName" />
        <result column="job_num" property="jobNumber" />
    </resultMap>

    <resultMap id="manualReviewOrderModelResultMap" type="com.xiji.cashloan.cl.model.ManualReviewOrderModel">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="borrow_name" property="borrowName" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="borrow_id" property="borrowId" jdbcType="BIGINT" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="amount" property="amount" jdbcType="DECIMAL" />
        <result column="time_limit" property="timeLimit" jdbcType="VARCHAR" />
        <result column="borrow_time" property="borrowTime" jdbcType="TIMESTAMP" />
        <result column="state" property="state" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="review_time" property="reviewTime" jdbcType="TIMESTAMP" />
        <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
        <result column="interest" property="interest" jdbcType="DECIMAL" />
        <result column="info_authFee" property="infoAuthFee" jdbcType="DECIMAL" />
        <result column="service_fee" property="serviceFee" jdbcType="DECIMAL" />
        <result column="fee" property="fee" jdbcType="DECIMAL" />
        <result column="borrow_state" property="borrowState" jdbcType="VARCHAR" />
        <result column="borrow_user_id" property="borrowUserId" jdbcType="VARCHAR" />
        <result column="channel_name" property="channelName" jdbcType="VARCHAR" />
        <result column="again" property="again" jdbcType="VARCHAR" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,user_id,user_name,borrow_name,phone,borrow_id,state,remark,create_time,review_time
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="borrowName != null and borrowName != ''">
                and borrow_name = #{borrowName,jdbcType=VARCHAR}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="borrowId != null">
                and borrow_id = #{borrowId,jdbcType=BIGINT}
            </if>
            <if test="state != null and state != ''">
                and state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reviewTime != null">
                and review_time = #{reviewTime,jdbcType=TIMESTAMP}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.xiji.cashloan.cl.domain.ManualReviewOrder">
        insert into cl_manual_review_order(user_id,user_name,borrow_name,phone,borrow_id,state,remark,create_time,review_time)values(#{userId,jdbcType=BIGINT},#{userName,jdbcType=VARCHAR},#{borrowName,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{borrowId,jdbcType=BIGINT},#{state,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{reviewTime,jdbcType=TIMESTAMP})
    </insert>

    
    <update id="update" parameterType="com.xiji.cashloan.cl.domain.ManualReviewOrder">
        update cl_manual_review_order set 
            user_id = #{userId,jdbcType=BIGINT},
            user_name = #{userName,jdbcType=VARCHAR},
            borrow_name = #{borrowName,jdbcType=VARCHAR},
            phone = #{phone,jdbcType=VARCHAR},
            borrow_id = #{borrowId,jdbcType=BIGINT},
            state = #{state,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            review_time = #{reviewTime,jdbcType=TIMESTAMP}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_manual_review_order
          <set>
            <if test="userId != null">        
                user_id = #{userId,jdbcType=BIGINT},                
            </if>
            <if test="userName != null and userName != '' ">
                user_name = #{userName,jdbcType=VARCHAR},                
            </if>
            <if test="borrowName != null and borrowName != '' ">
                borrow_name = #{borrowName,jdbcType=VARCHAR},                
            </if>
            <if test="phone != null and phone != '' ">
                phone = #{phone,jdbcType=VARCHAR},                
            </if>
            <if test="borrowId != null">        
                borrow_id = #{borrowId,jdbcType=BIGINT},                
            </if>
            <if test="state != null and state != '' ">
                state = #{state,jdbcType=VARCHAR},                
            </if>
            <if test="remark != null and remark != '' ">
                remark = #{remark,jdbcType=VARCHAR},                
            </if>
            <if test="createTime != null">        
                create_time = #{createTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="reviewTime != null">        
                review_time = #{reviewTime,jdbcType=TIMESTAMP}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_manual_review_order
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_manual_review_order
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_manual_review_order
        <include refid="searchBy"/>
    </select>

    <select id="listSysUserByRole" resultMap="manualReviewCountResultMap" parameterType="java.util.HashMap">
        select u.id,u.name,u.user_name,u.job_num from arc_sys_user u, arc_sys_role r, arc_sys_user_role ur
        where ur.role_id = r.id and ur.user_id = u.id and u.status = 0
        <if test="roleNid != null and roleNid != '' ">
            and r.nid = #{roleNid, jdbcType=VARCHAR}
        </if>
        <if test="name != null and name != '' ">
            and u.name like concat("%",#{name, jdbcType=VARCHAR},"%")
        </if>
        <if test="userName != null and userName != '' ">
            and u.user_name like concat("%",#{userName, jdbcType=VARCHAR},"%")
        </if>
        <if test="jobNum != null and jobNum != '' ">
            and u.job_num like concat("%",#{jobNum, jdbcType=VARCHAR},"%")
        </if>
    </select>

    <select id="countOrder" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        SELECT count(1) FROM cl_manual_review_order
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userId != null and userId != '' and userId != '0' ">
                user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="state != null and state != ''">
                and state = #{state,jdbcType=VARCHAR}
            </if>
        </trim>
    </select>

    <select id="countTodayPassOrder" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        SELECT count(1) FROM cl_manual_review_order
        where TO_DAYS(review_time)-TO_DAYS(SYSDATE()) = 0  and state ='20'
            <if test="userId != null and userId != '' and userId != '0' ">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
    </select>


    <select id="countTodayLoanOrder" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        SELECT count(1) FROM cl_manual_review_order as mro left join cl_pay_log as log on mro.borrow_id = log.borrow_id
        where TO_DAYS(log.create_time)-TO_DAYS(SYSDATE()) = 0  and mro.state ='20' and log.scenes = '10' and log.state ='40'
        <if test="userId != null and userId != '' and userId != '0' ">
            and mro.user_id = #{userId,jdbcType=BIGINT}
        </if>
    </select>

    <select id="countByTime" resultType="java.lang.Integer" parameterType="java.util.HashMap">
        SELECT count(1) FROM cl_manual_review_order
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userId != null and userId != '' and userId != '0' ">
                user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="startTime != null">
                <![CDATA[ AND DATE_FORMAT(create_time, '%Y-%m-%d') >=
            	 DATE_FORMAT(#{startTime,jdbcType=TIMESTAMP},'%Y-%m-%d')]]>
            </if>
            <if test="endTime != null">
                <![CDATA[ AND DATE_FORMAT(create_time, '%Y-%m-%d') <=
            	 DATE_FORMAT(#{endTime,jdbcType=TIMESTAMP},'%Y-%m-%d')]]>
            </if>
        </trim>
    </select>

    <update id="orderAllotUser"  parameterType="java.util.HashMap">
        update cl_manual_review_order
        <set>
            <if test="userId != null and userId != '' ">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="userName != null and userName != '' ">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="state != null and state != '' ">
                state = #{state,jdbcType=VARCHAR},
            </if>
        </set>
        where state != 20 and state != 30
        and id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="list" resultMap="manualReviewOrderModelResultMap">
        select
        o.id,o.user_id,o.user_name,o.phone,o.borrow_name,b.id as borrow_id,b.user_id as borrow_user_id,b.order_no,b.amount,
        b.time_limit,b.create_time as borrow_time,o.state,o.create_time,o.review_time,b.real_amount,b.interest,b.info_auth_fee,
        b.service_fee,b.fee,b.state as borrow_state,o.remark as remark,c.name as channel_name,b.again again
        from cl_manual_review_order o
        left join cl_borrow b on o.borrow_id = b.id
        left join cl_user u on b.user_id = u.id
        left join cl_channel c on u.channel_id = c.id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id !='' and id !=null">
                o.id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId !='' and userId !=null">
                and o.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="userName !='' and userName !=null">
                and o.user_name  like  concat("%",#{userName,jdbcType=VARCHAR},"%")
            </if>
            <if test="phone !='' and phone !=null">
                and o.phone like  concat("%",#{phone,jdbcType=VARCHAR},"%")
            </if>
            <if test="borrowId !='' and borrowId !=null">
                and b.id = #{borrowId,jdbcType=BIGINT}
            </if>
            <if test="orderNo !='' and orderNo !=null">
                and b.order_no  like  concat("%",#{orderNo,jdbcType=VARCHAR},"%")
            </if>
            <if test="amount !='' and amount !=null">
                and b.amount = #{amount,jdbcType=DECIMAL}
            </if>
            <if test="timeLimit !='' and timeLimit !=null">
                and b.time_limit = #{timeLimit,jdbcType=VARCHAR}
            </if>
            <if test="borrowTime !=null">
                and b.create_time = #{borrowTime,jdbcType=TIMESTAMP}
            </if>
            <if test="borrowTime != null">
                and DATE_FORMAT(b.create_time,'%Y-%m-%d') = #{borrowTime,jdbcType=TIMESTAMP}
            </if>
            <if test="startTime != null">
                and DATE_FORMAT(b.create_time,'%Y-%m-%d') &gt;= #{startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="endTime  != null">
                and DATE_FORMAT(b.create_time,'%Y-%m-%d') &lt;= #{endTime,jdbcType=TIMESTAMP}
            </if>
            <if test="state !='' and state !=null">
                and o.state = #{state,jdbcType=VARCHAR}
            </if>
            <if test="stateList !=null">
                and b.state  in
                <foreach item="item" index="index" collection="stateList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="remark !='' and remark !=null">
                and o.remark = #{state,jdbcType=VARCHAR}
            </if>
            <if test="createTime !=null">
                and o.create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reviewTime !=null">
                and o.review_time = #{reviewTime,jdbcType=TIMESTAMP}
            </if>
            <if test="reviewTime != null">
                and DATE_FORMAT(o.review_time,'%Y-%m-%d') = #{reviewTime,jdbcType=TIMESTAMP}
            </if>
            <if test="startDate != null">
            and DATE_FORMAT(o.review_time,'%Y-%m-%d') &gt;= #{startDate,jdbcType=TIMESTAMP}
            </if>
            <if test="endDate != null">
                and DATE_FORMAT(o.review_time,'%Y-%m-%d') &lt;= #{endDate,jdbcType=TIMESTAMP}
            </if>
            <if test="borrowName !='' and borrowName !=null">
                and o.borrow_name    like  concat("%",#{borrowName,jdbcType=VARCHAR},"%")
            </if>
            <if test="borrowState !='' and borrowState !=null">
                and b.state = #{borrowState,jdbcType=VARCHAR}
            </if>
            <if test="isDestribute != null and isDestribute != ''">
                <if test="isDestribute =='10' ">
                    and o.user_id is not null
                </if>
                <if test="isDestribute =='20' ">
                    and o.user_id is null
                </if>
            </if>
            <if test="channelID !='' and channelID !=null">
              and u.channel_id = #{channelID,jdbcType=VARCHAR}
            </if>
            <if test="again !='' and again !=null">
                and b.again = #{again,jdbcType=VARCHAR}
            </if>
        </trim>
        ORDER BY create_time DESC
    </select>

    <update id="reviewState"  parameterType="java.util.HashMap">
        update cl_manual_review_order
        <set>
            <if test="state != null and state != '' ">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="remark != null and remark != '' ">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="reviewTime != null">
                review_time = #{reviewTime,jdbcType=TIMESTAMP}
            </if>
        </set>
        where borrow_id = #{id ,jdbcType=BIGINT}  AND user_id = #{userId ,jdbcType=BIGINT} AND state = 11
    </update>

    <select id="listAllocated" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        select mro.* from cl_manual_review_order as mro left join cl_borrow as borrow on mro.borrow_id = borrow.id
        WHERE borrow.again = '10' and mro.state = '10'
        order by mro.create_time ASC
    </select>


    <select id="listToBeAssignedCount" resultType="java.util.HashMap">
       SELECT count(mro.id) as reviewCount, mro.user_id as userId FROM cl_manual_review_order as mro left join cl_borrow as borrow on mro.borrow_id = borrow.id where mro.state ='11' and borrow.again = '10' GROUP BY mro.user_id;
    </select>

    <update id="updateByBorrowId"  parameterType="java.util.HashMap">
        update cl_manual_review_order
        <set>
                user_id = null,
                user_name = null ,
            <if test="state != null and state != '' ">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="remark != null and remark != '' ">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="reviewTime != null">
                review_time = #{reviewTime,jdbcType=TIMESTAMP}
            </if>
        </set>
        where borrow_id = #{borrowId ,jdbcType=BIGINT}
    </update>

    <update id="batchUpdate" parameterType="java.util.List">
        update cl_manual_review_order
        <trim prefix="set" suffixOverrides=",">
        <trim prefix="state =case" suffix="end,">
            <foreach collection="list" item="item">
                <if test="item.state != null">
                    when id=#{item.id} then #{item.state}
                </if>
            </foreach>
        </trim>
        <trim prefix="user_id =case" suffix="end,">
            <foreach collection="list" item="item">
                    when id=#{item.id} then #{item.userId}
            </foreach>
        </trim>
        <trim prefix="user_name =case" suffix="end,">
            <foreach collection="list" item="item">
                <if test="item.userName != null">
                    when id=#{item.id} then #{item.userName}
                </if>
            </foreach>
        </trim>
        </trim>
        <where>
            <foreach collection="list" separator="or" item="item">
                id = #{item.id}
            </foreach>
        </where>
    </update>
</mapper>
