<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_channel_statistic_data表:渠道统计数据模块 -->
<mapper namespace="com.xiji.cashloan.cl.mapper.statistic.ChannelStatisticDataMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="count_time" property="countTime" jdbcType="TIMESTAMP" />
        <result column="channel_id" property="channelId" jdbcType="INTEGER" />
        <result column="user_register" property="userRegister" jdbcType="INTEGER" />
        <result column="borrow_apply_count" property="borrowApplyCount" jdbcType="INTEGER" />
        <result column="machine_audit_pass_count" property="machineAuditPassCount" jdbcType="INTEGER" />
        <result column="machine_audit_not_pass_count" property="machineAuditNotPassCount" jdbcType="INTEGER" />
        <result column="review_pass_count" property="reviewPassCount" jdbcType="INTEGER" />
        <result column="review_not_pass_count" property="reviewNotPassCount" jdbcType="INTEGER" />
        <result column="first_load_count" property="firstLoadCount" jdbcType="INTEGER" />
        <result column="again_load_count" property="againLoadCount" jdbcType="INTEGER" />
        <result column="expire_overdue_count" property="expireOverdueCount" jdbcType="INTEGER" />
        <result column="first_expire_overdue_count" property="firstExpireOverdueCount" jdbcType="INTEGER" />
        <result column="machine_audit_pass_rate" property="machineAuditPassRate" jdbcType="DECIMAL" />
        <result column="machine_audit_not_pass_rate" property="machineAuditNotPassRate" jdbcType="DECIMAL" />
        <result column="review_pass_rate" property="reviewPassRate" jdbcType="DECIMAL" />
        <result column="review_not_pass_rate" property="reviewNotPassRate" jdbcType="DECIMAL" />
        <result column="first_overdue_rate" property="firstOverdueRate" jdbcType="DECIMAL" />
        <result column="overdue_rate" property="overdueRate" jdbcType="DECIMAL" />
        <result column="load_rate" property="loadRate" jdbcType="DECIMAL" />
        <result column="extend_count" property="extendCount" jdbcType="INTEGER"/>
        <result column="extend_overdue_count" property="extendOverdueCount" jdbcType="INTEGER"/>
        <result column="first_extend_count" property="firstExtendCount" jdbcType="INTEGER"/>
        <result column="first_extend_overdue_count" property="firstExtendOverdueCount" jdbcType="INTEGER"/>
        <result column="first_expire_load_count" property="firstExpireLoadCount" jdbcType="INTEGER"/>
        <result column="again_expire_load_count" property="againExpireLoadCount" jdbcType="INTEGER"/>
        <result column="new_borrow_apply_count" property="newBorrowApplyCount" jdbcType="INTEGER" />
        <result column="new_machine_audit_pass_count" property="newMachineAuditPassCount" jdbcType="INTEGER" />
        <result column="new_machine_audit_not_pass_count" property="newMachineAuditNotPassCount" jdbcType="INTEGER" />
        <result column="new_review_pass_count" property="newReviewPassCount" jdbcType="INTEGER" />
        <result column="new_review_not_pass_count" property="newReviewNotPassCount" jdbcType="INTEGER" />
        <result column="again_overdue_rate" property="againOverdueRate" jdbcType="INTEGER"/>
        <result column="again_expire_overdue_count" property="againExpireOverdueCount" jdbcType="INTEGER" />
        <result column="channel_name" property="channelName" jdbcType="VARCHAR"/>
        <result column="channel_code" property="channelCode" jdbcType="VARCHAR"/>

    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,create_time,update_time,count_time,channel_id,user_register,borrow_apply_count,machine_audit_pass_count,machine_audit_not_pass_count,review_pass_count,review_not_pass_count,first_load_count,again_load_count,expire_overdue_count,first_expire_overdue_count,machine_audit_pass_rate,machine_audit_not_pass_rate,review_pass_rate,review_not_pass_rate,first_overdue_rate,overdue_rate,load_rate,
        extend_count,extend_overdue_count,first_extend_count,first_extend_overdue_count,first_expire_load_count,again_expire_load_count,
        new_borrow_apply_count,new_machine_audit_pass_count,new_machine_audit_not_pass_count,new_review_pass_count,new_review_not_pass_count,
        again_overdue_rate,again_expire_overdue_count
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="countTime != null">
                and count_time = #{countTime,jdbcType=TIMESTAMP}
            </if>
            <if test="channelId != null">
                and channel_id = #{channelId,jdbcType=INTEGER}
            </if>
            <if test="userRegister != null">
                and user_register = #{userRegister,jdbcType=INTEGER}
            </if>
            <if test="borrowApplyCount != null">
                and borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER}
            </if>
            <if test="machineAuditPassCount != null">
                and machine_audit_pass_count = #{machineAuditPassCount,jdbcType=INTEGER}
            </if>
            <if test="machineAuditNotPassCount != null">
                and machine_audit_not_pass_count = #{machineAuditNotPassCount,jdbcType=INTEGER}
            </if>
            <if test="reviewPassCount != null">
                and review_pass_count = #{reviewPassCount,jdbcType=INTEGER}
            </if>
            <if test="reviewNotPassCount != null">
                and review_not_pass_count = #{reviewNotPassCount,jdbcType=INTEGER}
            </if>
            <if test="firstLoadCount != null">
                and first_load_count = #{firstLoadCount,jdbcType=INTEGER}
            </if>
            <if test="againLoadCount != null">
                and again_load_count = #{againLoadCount,jdbcType=INTEGER}
            </if>
            <if test="expireOverdueCount != null">
                and expire_overdue_count = #{expireOverdueCount,jdbcType=INTEGER}
            </if>
            <if test="firstExpireOverdueCount != null">
                and first_expire_overdue_count = #{firstExpireOverdueCount,jdbcType=INTEGER}
            </if>
            <if test="machineAuditPassRate != null">
                and machine_audit_pass_rate = #{machineAuditPassRate,jdbcType=DECIMAL}
            </if>
            <if test="machineAuditNotPassRate != null">
                and machine_audit_not_pass_rate = #{machineAuditNotPassRate,jdbcType=DECIMAL}
            </if>
            <if test="reviewPassRate != null">
                and review_pass_rate = #{reviewPassRate,jdbcType=DECIMAL}
            </if>
            <if test="reviewNotPassRate != null">
                and review_not_pass_rate = #{reviewNotPassRate,jdbcType=DECIMAL}
            </if>
            <if test="firstOverdueRate != null">
                and first_overdue_rate = #{firstOverdueRate,jdbcType=DECIMAL}
            </if>
            <if test="overdueRate != null">
                and overdue_rate = #{overdueRate,jdbcType=DECIMAL}
            </if>
            <if test="loadRate != null">
                and load_rate = #{loadRate,jdbcType=DECIMAL}
            </if>

        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        insert into cl_channel_statistic_data(create_time,update_time,count_time,channel_id,user_register,borrow_apply_count,machine_audit_pass_count,machine_audit_not_pass_count,review_pass_count,review_not_pass_count,first_load_count,again_load_count,expire_overdue_count,first_expire_overdue_count,machine_audit_pass_rate,machine_audit_not_pass_rate,review_pass_rate,review_not_pass_rate,first_overdue_rate,overdue_rate,load_rate,extend_count,extend_overdue_count,first_extend_count,first_extend_overdue_count,first_expire_load_count,again_expire_load_count,
        new_borrow_apply_count,new_machine_audit_pass_count,new_machine_audit_not_pass_count,new_review_pass_count,new_review_not_pass_count,again_overdue_rate,again_expire_overdue_count)

        values(#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{countTime,jdbcType=TIMESTAMP},#{channelId,jdbcType=INTEGER},#{userRegister,jdbcType=INTEGER},#{borrowApplyCount,jdbcType=INTEGER},#{machineAuditPassCount,jdbcType=INTEGER},#{machineAuditNotPassCount,jdbcType=INTEGER},#{reviewPassCount,jdbcType=INTEGER},#{reviewNotPassCount,jdbcType=INTEGER},#{firstLoadCount,jdbcType=INTEGER},#{againLoadCount,jdbcType=INTEGER},#{expireOverdueCount,jdbcType=INTEGER},#{firstExpireOverdueCount,jdbcType=INTEGER},#{machineAuditPassRate,jdbcType=DECIMAL},
        #{machineAuditNotPassRate,jdbcType=DECIMAL},#{reviewPassRate,jdbcType=DECIMAL},#{reviewNotPassRate,jdbcType=DECIMAL},#{firstOverdueRate,jdbcType=DECIMAL},#{overdueRate,jdbcType=DECIMAL},#{loadRate,jdbcType=DECIMAL},#{extendCount,jdbcType=INTEGER},#{extendOverdueCount,jdbcType=INTEGER},#{firstExtendCount,jdbcType=INTEGER},#{firstExtendOverdueCount,jdbcType=INTEGER},#{firstExpireLoadCount,jdbcType=INTEGER},#{againExpireLoadCount,jdbcType=INTEGER},#{newBorrowApplyCount,jdbcType=INTEGER},#{newMachineAuditPassCount,jdbcType=INTEGER},
        #{newMachineAuditNotPassCount,jdbcType=INTEGER},#{newReviewPassCount,jdbcType=INTEGER},#{newReviewNotPassCount,jdbcType=INTEGER},#{againOverdueRate,jdbcType=DECIMAL},#{againExpireOverdueCount,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        update cl_channel_statistic_data set 
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            count_time = #{countTime,jdbcType=TIMESTAMP},
            channel_id = #{channelId,jdbcType=INTEGER},
            user_register = #{userRegister,jdbcType=INTEGER},
            borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER},
            machine_audit_pass_count = #{machineAuditPassCount,jdbcType=INTEGER},
            machine_audit_not_pass_count = #{machineAuditNotPassCount,jdbcType=INTEGER},
            review_pass_count = #{reviewPassCount,jdbcType=INTEGER},
            review_not_pass_count = #{reviewNotPassCount,jdbcType=INTEGER},
            first_load_count = #{firstLoadCount,jdbcType=INTEGER},
            again_load_count = #{againLoadCount,jdbcType=INTEGER},
            expire_overdue_count = #{expireOverdueCount,jdbcType=INTEGER},
            first_expire_overdue_count = #{firstExpireOverdueCount,jdbcType=INTEGER},
            machine_audit_pass_rate = #{machineAuditPassRate,jdbcType=DECIMAL},
            machine_audit_not_pass_rate = #{machineAuditNotPassRate,jdbcType=DECIMAL},
            review_pass_rate = #{reviewPassRate,jdbcType=DECIMAL},
            review_not_pass_rate = #{reviewNotPassRate,jdbcType=DECIMAL},
            first_overdue_rate = #{firstOverdueRate,jdbcType=DECIMAL},
            overdue_rate = #{overdueRate,jdbcType=DECIMAL},
            load_rate = #{loadRate,jdbcType=DECIMAL},
            extend_count = #{extendCount,jdbcType=INTEGER},
            extend_overdue_count = #{extendOverdueCount,jdbcType=INTEGER},
            first_extend_count = #{firstExtendCount,jdbcType=INTEGER},
            first_extend_overdue_count = #{firstExtendOverdueCount,jdbcType=INTEGER},
            first_expire_load_count = #{firstExpireLoadCount,jdbcType=INTEGER},
            again_expire_load_count = #{againExpireLoadCount,jdbcType=INTEGER},
            new_borrow_apply_count = #{newBorrowApplyCount,jdbcType=INTEGER},
            new_machine_audit_pass_count = #{newMachineAuditPassCount,jdbcType=INTEGER},
            new_machine_audit_not_pass_count = #{newMachineAuditNotPassCount,jdbcType=INTEGER},
            new_review_pass_count = #{newReviewPassCount,jdbcType=INTEGER},
            new_review_not_pass_count = #{newReviewNotPassCount,jdbcType=INTEGER},
            again_overdue_rate = #{againOverdueRate,jdbcType=DECIMAL},
            again_expire_overdue_count = #{againExpireOverdueCount,jdbcType=INTEGER},

        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_channel_statistic_data
          <set>
            <if test="createTime != null">        
                create_time = #{createTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="updateTime != null">        
                update_time = #{updateTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="countTime != null">        
                count_time = #{countTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="channelId != null">        
                channel_id = #{channelId,jdbcType=INTEGER},                
            </if>
            <if test="userRegister != null">        
                user_register = #{userRegister,jdbcType=INTEGER},                
            </if>
            <if test="borrowApplyCount != null">        
                borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER},                
            </if>
            <if test="machineAuditPassCount != null">        
                machine_audit_pass_count = #{machineAuditPassCount,jdbcType=INTEGER},                
            </if>
            <if test="machineAuditNotPassCount != null">        
                machine_audit_not_pass_count = #{machineAuditNotPassCount,jdbcType=INTEGER},                
            </if>
            <if test="reviewPassCount != null">        
                review_pass_count = #{reviewPassCount,jdbcType=INTEGER},                
            </if>
            <if test="reviewNotPassCount != null">        
                review_not_pass_count = #{reviewNotPassCount,jdbcType=INTEGER},                
            </if>
            <if test="firstLoadCount != null">        
                first_load_count = #{firstLoadCount,jdbcType=INTEGER},                
            </if>
            <if test="againLoadCount != null">        
                again_load_count = #{againLoadCount,jdbcType=INTEGER},                
            </if>
            <if test="overdueCount != null">        
                expire_overdue_count = #{expireOverdueCount,jdbcType=INTEGER},
            </if>
            <if test="firstOverdueCount != null">        
                first_expire_overdue_count = #{firstExpireOverdueCount,jdbcType=INTEGER},
            </if>
            <if test="machineAuditPassRate != null">        
                machine_audit_pass_rate = #{machineAuditPassRate,jdbcType=DECIMAL},                
            </if>
            <if test="machineAuditNotPassRate != null">        
                machine_audit_not_pass_rate = #{machineAuditNotPassRate,jdbcType=DECIMAL},                
            </if>
            <if test="reviewPassRate != null">        
                review_pass_rate = #{reviewPassRate,jdbcType=DECIMAL},                
            </if>
            <if test="reviewNotPassRate != null">        
                review_not_pass_rate = #{reviewNotPassRate,jdbcType=DECIMAL},                
            </if>
            <if test="firstOverdueRate != null">        
                first_overdue_rate = #{firstOverdueRate,jdbcType=DECIMAL},                
            </if>
            <if test="overdueRate != null">        
                overdue_rate = #{overdueRate,jdbcType=DECIMAL},                
            </if>
            <if test="loadRate != null">        
                load_rate = #{loadRate,jdbcType=DECIMAL},
            </if>

              <if test="extendCount != null">
                  extend_count = #{extendCount,jdbcType=INTEGER},
              </if>
              <if test="extendOverdueCount != null">
                  extend_overdue_count = #{extendOverdueCount,jdbcType=INTEGER},
              </if>
              <if test="firstExtendCount != null">
                  first_extend_count = #{firstExtendCount,jdbcType=INTEGER},
              </if>
              <if test="firstExtendOverdueCount != null">
                  first_extend_overdue_count = #{firstExtendOverdueCount,jdbcType=INTEGER},
              </if>
              <if test="firstExpireLoadCount != null">
                  first_expire_load_count = #{firstExpireLoadCount,jdbcType=INTEGER},
              </if>
              <if test="againExpireLoadCount != null">
                  again_expire_load_count = #{againExpireLoadCount,jdbcType=INTEGER}
              </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_channel_statistic_data
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_channel_statistic_data
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_channel_statistic_data
        <include refid="searchBy"/>
    </select>

    <insert id="saveSelective" parameterType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        insert into cl_channel_statistic_data
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="countTime != null">
                count_time,
            </if>
            <if test="channelId != null">
                channel_id,
            </if>
            <if test="userRegister != null">
                user_register,
            </if>
            <if test="borrowApplyCount != null">
                borrow_apply_count,
            </if>
            <if test="machineAuditPassCount != null">
                machine_audit_pass_count,
            </if>
            <if test="machineAuditNotPassCount != null">
                machine_audit_not_pass_count,
            </if>
            <if test="reviewPassCount != null">
                review_pass_count,
            </if>
            <if test="reviewNotPassCount != null">
                review_not_pass_count,
            </if>
            <if test="firstLoadCount != null">
                first_load_count,
            </if>
            <if test="againLoadCount != null">
                again_load_count,
            </if>
            <if test="overdueCount != null">
                overdue_count,
            </if>
            <if test="firstOverdueCount != null">
                first_overdue_count,
            </if>
            <if test="machineAuditPassRate != null">
                machine_audit_pass_rate,
            </if>
            <if test="machineAuditNotPassRate != null">
                machine_audit_not_pass_rate,
            </if>
            <if test="reviewPassRate != null">
                review_pass_rate,
            </if>
            <if test="reviewNotPassRate != null">
                review_not_pass_rate,
            </if>
            <if test="firstOverdueRate != null">
                first_overdue_rate,
            </if>
            <if test="overdueRate != null">
                overdue_rate,
            </if>
            <if test="loadRate != null">
                load_rate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="countTime != null">
                #{countTime,jdbcType=TIMESTAMP},
            </if>
            <if test="channelId != null">
                #{channelId,jdbcType=INTEGER},
            </if>
            <if test="userRegister != null">
                #{userRegister,jdbcType=INTEGER},
            </if>
            <if test="borrowApplyCount != null">
                #{borrowApplyCount,jdbcType=INTEGER},
            </if>
            <if test="machineAuditPassCount != null">
                #{machineAuditPassCount,jdbcType=INTEGER},
            </if>
            <if test="machineAuditNotPassCount != null">
                #{machineAuditNotPassCount,jdbcType=INTEGER},
            </if>
            <if test="reviewPassCount != null">
                #{reviewPassCount,jdbcType=INTEGER},
            </if>
            <if test="reviewNotPassCount != null">
                #{reviewNotPassCount,jdbcType=INTEGER},
            </if>
            <if test="firstLoadCount != null">
                #{firstLoadCount,jdbcType=INTEGER},
            </if>
            <if test="againLoadCount != null">
                #{againLoadCount,jdbcType=INTEGER},
            </if>
            <if test="overdueCount != null">
                #{overdueCount,jdbcType=INTEGER},
            </if>
            <if test="firstOverdueCount != null">
                #{firstOverdueCount,jdbcType=INTEGER},
            </if>
            <if test="machineAuditPassRate != null">
                #{machineAuditPassRate,jdbcType=DECIMAL},
            </if>
            <if test="machineAuditNotPassRate != null">
                #{machineAuditNotPassRate,jdbcType=DECIMAL},
            </if>
            <if test="reviewPassRate != null">
                #{reviewPassRate,jdbcType=DECIMAL},
            </if>
            <if test="reviewNotPassRate != null">
                #{reviewNotPassRate,jdbcType=DECIMAL},
            </if>
            <if test="firstOverdueRate != null">
                #{firstOverdueRate,jdbcType=DECIMAL},
            </if>
            <if test="overdueRate != null">
                #{overdueRate,jdbcType=DECIMAL},
            </if>
            <if test="loadRate != null">
                #{loadRate,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>

    <select id="getLateTime" resultType="java.util.Date">
        select count_time from  cl_channel_statistic_data order by count_time desc limit 1
    </select>



    <select id="getUserRegister" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT channel.id as channelId,COUNT(channel.id) userRegister,DATE_FORMAT(regist_time,'%Y-%m-%d') countTime from  cl_user t2 ,cl_channel as channel where channel.id = t2.channel_id
        <if test="startDate!=null and startDate!=''">
            and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
        </if>
        <if test="endDate!=null and endDate!=''">
            <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
        </if>

        GROUP BY countTime,channelId
    </select>

    <select id="getBorrowApplyCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId, COUNT(t2.id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId,borrow.id,DATE_FORMAT(borrow.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow,cl_user usr,cl_channel as channel where borrow.user_id = usr.id and usr.channel_id = channel.id ) t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,channelId
    </select>

    <select id="getMachineAuditPassCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) machineAuditPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='22' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id ) t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>

    <select id="getMachineAuditNotPassCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) machineAuditNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='21' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
    <select id="getReviewPassCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) reviewPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='26' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
    <select id="getReviewNotPassCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) reviewNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='27' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
    <select id="getFirstLoadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) firstLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(borrow.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='30' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
    <select id="getAgainLoadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) againLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(borrow.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='30' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='20') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
    <select id="getExpireOverdueCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(t2.id) expireOverdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(DATE_SUB(progress.create_time, INTERVAL 1 DAY), '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay , cl_borrow_progress as progress ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id and progress.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id and progress.state = '50') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>

    <!-- 当日到期首贷逾期笔数-->
    <select id="getFirstExpireOverdueCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(t2.id) firstExpireOverdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(DATE_SUB(progress.create_time, INTERVAL 1 DAY), '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay ,cl_borrow_progress as progress ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id and  progress.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id and borrow.again='10' and  progress.state = '50' and repay.type ='1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>




    <select id="getExtendCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(distinct t2.id) extendCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id  and usr.id = borrow.user_id and usr.channel_id = channel.id and repay.type ='2' ) t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>


    <select id="getExtendOverdueCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(t2.id) extendOverdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(DATE_SUB(progress.create_time, INTERVAL 1 DAY), '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay ,cl_borrow_progress as progress ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id and  progress.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id  and  progress.state = '50' and repay.type ='2') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>

    <select id="getFirstExtendCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(distinct t2.id) firstExtendCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id  and usr.id = borrow.user_id and usr.channel_id = channel.id and repay.state = '30' and borrow.again ='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>


    <select id="getFirstExtendOverdueCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(t2.id) firstExtendOverdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(DATE_SUB(progress.create_time, INTERVAL 1 DAY), '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay ,cl_borrow_progress as progress ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id and  progress.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id and borrow.again='10' and  progress.state = '50' and repay.type ='2') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>

    <select id="getFirstExpireLoadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(t2.id) firstExpireLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id  and usr.id = borrow.user_id and usr.channel_id = channel.id and borrow.again ='10' and repay.type ='1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>

    <select id="getAgainExpireLoadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(t2.id) againExpireLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id  and usr.id = borrow.user_id and usr.channel_id = channel.id and borrow.again ='20' and repay.type ='1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>


    <select id="getNewBorrowApplyCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId, COUNT(t2.id) newBorrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId,borrow.id,DATE_FORMAT(borrow.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow,cl_user usr,cl_channel as channel where borrow.user_id = usr.id and usr.channel_id = channel.id and borrow.again ='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,channelId
    </select>

    <select id="getNewMachineAuditPassCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) newMachineAuditPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='22' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>

    <select id="getNewMachineAuditNotPassCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) newMachineAuditNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='21' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again ='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
    <select id="getNewReviewPassCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) newReviewPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='26' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again ='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
    <select id="getNewReviewNotPassCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) newReviewNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='27' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again ='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>


    <!-- 当日到期复贷逾期笔数-->
    <select id="getAgainExpireOverdueCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId ,COUNT(t2.id) againExpireOverdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(DATE_SUB(progress.create_time, INTERVAL 1 DAY), '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_borrow_repay as repay ,cl_borrow_progress as progress ,cl_user as usr ,cl_channel as channel where repay.borrow_id = borrow.id and  progress.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id and borrow.again='20' and  progress.state = '50' and repay.type ='1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>


    <select id="listChannelStatistic" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        select
        sum(user_register) as user_register,sum(borrow_apply_count) as borrow_apply_count,sum(machine_audit_pass_count) as machine_audit_pass_count,
        sum(machine_audit_not_pass_count) as machine_audit_not_pass_count,
        sum(review_pass_count) as review_pass_count,sum(review_not_pass_count) as review_not_pass_count,sum(first_load_count) as first_load_count,
        sum(again_load_count) as again_load_count,sum(expire_overdue_count) as expire_overdue_count,
        sum(first_expire_overdue_count) as first_expire_overdue_count,sum(extend_count) as extend_count,sum(extend_overdue_count) as extend_overdue_count,
        sum(first_extend_count) as first_extend_count,sum(first_extend_overdue_count) as first_extend_overdue_count,
        sum(first_expire_load_count) as first_expire_load_count,sum(again_expire_load_count) as again_expire_load_count,
        sum(new_borrow_apply_count) as new_borrow_apply_count,sum(new_machine_audit_pass_count) as new_machine_audit_pass_count,
        sum(new_machine_audit_not_pass_count) as new_machine_audit_not_pass_count,sum(new_review_pass_count) as new_review_pass_count,
        sum(new_review_not_pass_count) as new_review_not_pass_count,sum(again_expire_overdue_count) as again_expire_overdue_count,
        channel.name as channel_name,channel.code as channel_code

        from cl_channel_statistic_data as statistic,cl_channel as channel
        <where>
             statistic.channel_id = channel.id
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(count_time,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(count_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>

            <if test="code != null and code !=''">
                and channel.code like concat("%",#{code,jdbcType=VARCHAR},"%")
            </if>
            <if test="channelName !=null and channelName !=''">
                and channel.name like concat("%",#{channelName,jdbcType=VARCHAR},"%")
            </if>
        </where>
        GROUP BY channel_id,channel_name,channel_code
        order by channel_id desc
    </select>

<select id="listChannelLoan" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select <include refid="Base_Column_List"/>
    from cl_channel_statistic_data
    where 1=1
    <if test="channelId != null">
        and channel_id = #{channelId}
    </if>
    <if test="startDate!=null and startDate!=''">
        and DATE_FORMAT(count_time,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
    </if>
    <if test="endDate!=null and endDate!=''">
        <![CDATA[ and DATE_FORMAT(count_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
    </if>
</select>


    <update id="updateChannelStatistic" parameterType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        update cl_channel_statistic_data
        <set>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="firstLoadCount != null">
                first_load_count = #{firstLoadCount,jdbcType=INTEGER},
            </if>
            <if test="againLoadCount != null">
                again_load_count = #{againLoadCount,jdbcType=INTEGER}
            </if>
        </set>
        where id = #{id ,jdbcType=INTEGER}

    </update>



    <select id="firstLoadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) firstLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(borrow.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='30' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
    <select id="againLoadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.ChannelStatisticData">
        SELECT t2.channelId as channelId,COUNT(t2.id) againLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') countTime FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(borrow.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='30' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='20') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(regist_time,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(regist_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime,channelId
    </select>
</mapper>
