<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_auditor_statistic_data表:审核人员统计数据模块 -->
<mapper namespace="com.xiji.cashloan.cl.mapper.statistic.AuditorStatisticDataMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="count_time" property="countTime" jdbcType="TIMESTAMP" />
        <result column="auditor_id" property="auditorId" jdbcType="INTEGER" />
        <result column="borrow_apply_count" property="borrowApplyCount" jdbcType="INTEGER" />
        <result column="pass_order" property="passOrder" jdbcType="INTEGER" />
        <result column="first_pass_rate" property="firstPassRate" jdbcType="DECIMAL" />
        <result column="current_overdue_rate" property="currentOverdueRate" jdbcType="DECIMAL" />
        <result column="first_overdue_rate" property="firstOverdueRate" jdbcType="DECIMAL" />
        <result column="current_overdue" property="currentOverdue" jdbcType="INTEGER"/>
        <result column="first_load_count" property="firstLoadCount" jdbcType="INTEGER"/>
        <result column="first_overdue" property="firstOverdue" jdbcType="INTEGER"/>
        <result column="load_count" property="loadCount" jdbcType="INTEGER"/>
        <result column="first_extend_overdue_count" property="firstExtendOverdueCount" jdbcType="INTEGER"/>
        <result column="first_pass_order" property="firstPassOrder" jdbcType="INTEGER"/>
        <result column="new_borrow_apply_count" property="newBorrowApplyCount" jdbcType="INTEGER" />
        <result column="again_load_count" property="againLoadCount" jdbcType="INTEGER"/>
        <result column="again_overdue" property="againOverdue" jdbcType="INTEGER"/>


        <result column="auditor_name" property="auditorName" jdbcType="VARCHAR"/>
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,create_time,update_time,count_time,auditor_id,borrow_apply_count,pass_order,first_pass_rate,current_overdue_rate,first_overdue_rate, current_overdue,first_load_count,first_overdue,first_extend_overdue_count,first_pass_order,new_borrow_apply_count
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="countTime != null">
                and count_time = #{countTime,jdbcType=TIMESTAMP}
            </if>
            <if test="auditorId != null">
                and auditor_id = #{auditorId,jdbcType=INTEGER}
            </if>
            <if test="borrowApplyCount != null">
                and borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER}
            </if>
            <if test="passOrder != null">
                and pass_order = #{passOrder,jdbcType=INTEGER}
            </if>
            <if test="firstPassRate != null">
                and first_pass_rate = #{firstPassRate,jdbcType=DECIMAL}
            </if>
            <if test="currentOverdueRate != null">
                and current_overdue_rate = #{currentOverdueRate,jdbcType=DECIMAL}
            </if>
            <if test="firstOverdueRate != null">
                and first_overdue_rate = #{firstOverdueRate,jdbcType=DECIMAL}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        insert into cl_auditor_statistic_data(create_time,update_time,count_time,auditor_id,borrow_apply_count,pass_order,first_pass_rate,current_overdue_rate,first_overdue_rate,current_overdue,first_load_count,first_overdue,load_count,first_extend_overdue_count,first_pass_order,new_borrow_apply_count)
        values(#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{countTime,jdbcType=TIMESTAMP},#{auditorId,jdbcType=INTEGER},#{borrowApplyCount,jdbcType=INTEGER},#{passOrder,jdbcType=INTEGER},#{firstPassRate,jdbcType=DECIMAL},#{currentOverdueRate,jdbcType=DECIMAL},#{firstOverdueRate,jdbcType=DECIMAL},#{currentOverdue,jdbcType=INTEGER},#{firstLoadCount,jdbcType=INTEGER},#{firstOverdue,jdbcType=INTEGER},#{loadCount,jdbcType=INTEGER},#{firstExtendOverdueCount,jdbcType=INTEGER},#{firstPassOrder,jdbcType=INTEGER},#{newBorrowApplyCount,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        update cl_auditor_statistic_data set 
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            count_time = #{countTime,jdbcType=TIMESTAMP},
            auditor_id = #{auditorId,jdbcType=INTEGER},
            borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER},
            pass_order = #{passOrder,jdbcType=INTEGER},
            first_pass_rate = #{firstPassRate,jdbcType=DECIMAL},
            current_overdue_rate = #{currentOverdueRate,jdbcType=DECIMAL},
            first_overdue_rate = #{firstOverdueRate,jdbcType=DECIMAL},
            current_overdue = #{currentOverdue,jdbcType=INTEGER},
            first_load_count = #{firstLoadCount,jdbcType=INTEGER},
            first_overdue = #{firstOverdue,jdbcType=INTEGER},
            load_count = #{loadCount,jdbcType=INTEGER},
            first_extend_overdue_count = #{firstExtendOverdueCount,jdbcType=INTEGER},
            first_pass_order = #{firstPassOrder,jdbcType=INTEGER},
            new_borrow_apply_count = #{newBorrowApplyCount,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_auditor_statistic_data
          <set>
            <if test="createTime != null">        
                create_time = #{createTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="updateTime != null">        
                update_time = #{updateTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="countTime != null">        
                count_time = #{countTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="auditorId != null">        
                auditor_id = #{auditorId,jdbcType=INTEGER},                
            </if>
            <if test="borrowApplyCount != null">        
                borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER},                
            </if>
            <if test="passOrder != null">        
                pass_order = #{passOrder,jdbcType=INTEGER},                
            </if>
            <if test="firstPassRate != null">
                first_pass_rate = #{firstPassRate,jdbcType=DECIMAL},
            </if>
            <if test="currentOverdueRate != null">        
                current_overdue_rate = #{currentOverdueRate,jdbcType=DECIMAL},                
            </if>
            <if test="firstOverdueRate != null">        
                first_overdue_rate = #{firstOverdueRate,jdbcType=DECIMAL},
            </if>

              <if test="currentOverdue != null">
                  current_overdue = #{currentOverdue,jdbcType=INTEGER},
              </if>
              <if test="firstLoadCount != null">
                  first_load_count = #{firstLoadCount,jdbcType=INTEGER},
              </if>
              <if test="firstOverdue != null">
                  first_overdue = #{firstOverdue,jdbcType=INTEGER},
              </if>
              <if test="firstExtendOverdueCount != null">
                  first_extend_overdue_count = #{firstExtendOverdueCount,jdbcType=INTEGER},
              </if>
              <if test="firstPassOrder != null" >
                  first_pass_order = #{firstPassOrder,jdbcType=INTEGER},
              </if>
              <if test="newBorrowApplyCount != null" >
                  new_borrow_apply_count = #{newBorrowApplyCount,jdbcType=INTEGER}
              </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_auditor_statistic_data
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_auditor_statistic_data
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_auditor_statistic_data
        <include refid="searchBy"/>
    </select>



    <select id="getLateDate" resultType="java.util.Date">
        select count_time from cl_auditor_statistic_data order by count_time desc limit 1;
    </select>

    <select id="borrowApplyCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
          SELECT t2.auditorId as auditorId ,COUNT(t2.id) borrowApplyCount,DATE_FORMAT(review_time, '%Y-%m-%d') count_time FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(mro.review_time, '%Y-%m-%d') review_time FROM cl_manual_review_order as mro where mro.state in ('20','30') ) t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>

          GROUP BY count_time ,auditorId
    </select>

    <select id="passOrder" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
          SELECT t2.auditorId as auditorId ,COUNT(t2.id) passOrder,DATE_FORMAT(review_time, '%Y-%m-%d') count_time FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(mro.review_time, '%Y-%m-%d') review_time FROM cl_manual_review_order as mro  where mro.state = '20') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
          GROUP BY count_time ,auditorId

    </select>


    <select id="firstOverdue" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) firstOverdue,DATE_FORMAT(review_time, '%Y-%m-%d') countTime FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') review_time FROM cl_borrow_repay as repay , cl_manual_review_order as mro,cl_borrow as borrow where repay.borrow_id = borrow.id and mro.borrow_id = borrow.id  and borrow.is_overdue = '20' and borrow.again = '10' and repay.type = '1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,auditorId

    </select>

    <select id="againOverdue" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) againOverdue,DATE_FORMAT(review_time, '%Y-%m-%d') countTime FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') review_time FROM cl_borrow_repay as repay , cl_manual_review_order as mro,cl_borrow as borrow where repay.borrow_id = borrow.id and mro.borrow_id = borrow.id  and borrow.is_overdue = '20' and borrow.again = '20' and repay.type = '1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,auditorId

    </select>

    <select id="firstLoadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) firstLoadCount,DATE_FORMAT(review_time, '%Y-%m-%d') countTime FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') review_time FROM cl_borrow_repay as repay , cl_manual_review_order as mro,cl_borrow as borrow where borrow.id = repay.borrow_id and mro.borrow_id = borrow.id and borrow.again = '10' and repay.type ='1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,auditorId

    </select>


    <select id="currentOverdue" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) currentOverdue,DATE_FORMAT(review_time, '%Y-%m-%d') countTime FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') review_time FROM cl_borrow_repay as repay , cl_manual_review_order as mro,cl_borrow as borrow where   borrow.id = repay.borrow_id and mro.borrow_id = borrow.id  and borrow.is_overdue = '20') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,auditorId

    </select>


    <select id="loadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) loadCount,DATE_FORMAT(review_time, '%Y-%m-%d') countTime FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') review_time FROM cl_borrow_repay as repay , cl_manual_review_order as mro,cl_borrow as borrow where borrow.id = repay.borrow_id and mro.borrow_id = borrow.id and repay.type ='1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,auditorId
    </select>

    <select id="againLoadCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) againLoadCount,DATE_FORMAT(review_time, '%Y-%m-%d') countTime FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') review_time FROM cl_borrow_repay as repay , cl_manual_review_order as mro,cl_borrow as borrow where borrow.id = repay.borrow_id and mro.borrow_id = borrow.id and borrow.again = '20' and repay.type ='1') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,auditorId
    </select>

    <select id="firstPassOrder" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) firstPassOrder,DATE_FORMAT(review_time, '%Y-%m-%d') count_time FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(mro.review_time, '%Y-%m-%d') review_time FROM cl_manual_review_order as mro ,cl_borrow as borrow where mro.borrow_id = borrow.id and mro.state = '20' and borrow.again ='10') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY count_time ,auditorId

    </select>

    <select id="firstExtendOverdueCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) firstExtendOverdueCount,DATE_FORMAT(review_time, '%Y-%m-%d') countTime FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(repay.repay_time, '%Y-%m-%d') review_time FROM  cl_borrow_repay as repay , cl_manual_review_order as mro,cl_borrow as borrow where  borrow.id = repay.borrow_id and mro.borrow_id = borrow.id and repay.state ='30' and borrow.again = '10' and borrow.is_overdue = '20') t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        GROUP BY countTime ,auditorId
    </select>

    <select id="newBorrowApplyCount" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.domain.statistic.AuditorStatisticData">
        SELECT t2.auditorId as auditorId ,COUNT(t2.id) newBorrowApplyCount,DATE_FORMAT(review_time, '%Y-%m-%d') count_time FROM ( SELECT mro.user_id as auditorId,mro.id ,DATE_FORMAT(mro.review_time, '%Y-%m-%d') review_time FROM cl_manual_review_order as mro,cl_borrow as borrow where borrow.id = mro.borrow_id and mro.state in ('20','30') and borrow.again ='10' ) t2
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(review_time,'%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(review_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>

        GROUP BY count_time ,auditorId
    </select>

  <select id="listAuditorStatistic" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        select auditor_id as auditor_id,sum(borrow_apply_count) as borrow_apply_count,
        sum(pass_order) as pass_order,sum(current_overdue) as current_overdue,sum(first_load_count) as first_load_count,
        sum(first_overdue) as first_overdue,sum(load_count) as load_count,sum(first_pass_order) as first_pass_order,
        sum(new_borrow_apply_count) as new_borrow_apply_count,sum(again_overdue) as again_overdue ,su.name as auditor_name
        from cl_auditor_statistic_data as statistic,arc_sys_user as su
      <where>
          su.id = statistic.auditor_id
          <if test="startDate!=null and startDate!=''">
              and DATE_FORMAT(count_time,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
          </if>
          <if test="endDate!=null and endDate!=''">
              <![CDATA[ and DATE_FORMAT(count_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
          </if>

          <if test="auditorName != null and auditorName !=''" >
              and su.name like concat("%",#{auditorName,jdbcType=VARCHAR},"%")
          </if>
      </where>
      GROUP BY auditor_id ,su.name order by auditor_id

  </select>

</mapper>
