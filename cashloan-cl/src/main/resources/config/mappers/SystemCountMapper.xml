<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 首页数据统计 -->
<mapper namespace="com.xiji.cashloan.cl.mapper.SystemCountMapper">
    <resultMap id="mapResult" type="HashMap">  
        <result property="key" column="ks" />  
        <result property="value" column="vs" />  
    </resultMap>  
    
    <!-- 统计当日注册用户数量 -->
    <select id="countRegister" resultType="java.lang.Integer" parameterType="java.util.HashMap">
    	select count(id) from cl_user 
    	where TO_DAYS(regist_time)-TO_DAYS(SYSDATE())=0  
    </select>
    <!-- 统计当日登陆用户数量 -->
    <select id="countLogin" resultType="java.lang.Integer" parameterType="java.util.HashMap">
    	select count(id) from cl_user 
    	where  TO_DAYS(login_time)-TO_DAYS(SYSDATE())=0    
    </select>
    <!-- 统计当日借款申请的数量 -->
    <select id="countBorrow" resultType="java.lang.Double" parameterType="java.util.HashMap">
    	select count(id) from cl_borrow 
    	where TO_DAYS(create_time)-TO_DAYS(SYSDATE())=0 
    </select>
    <!-- 统计当日借款申请通过的数量 -->
    <select id="countBorrowPass" resultType="java.lang.Double" parameterType="java.util.HashMap">
    	select count(id) from cl_borrow_progress 
    	where TO_DAYS(create_time)-TO_DAYS(SYSDATE())=0 
    		and state in ('20','26') 
    </select>
    <!-- 统计当日借款申请放款数量 -->
    <select id="countBorrowLoan" resultType="java.lang.Double" parameterType="java.util.HashMap">
    	select count(DISTINCT borrow_id) from cl_borrow_progress 
    	where TO_DAYS(create_time)-TO_DAYS(SYSDATE())=0
    	and state = '30'
    </select>
    <!-- 统计当日还款量 -->
    <select id="countBorrowRepay" resultType="java.lang.Integer" parameterType="java.util.HashMap">
    	select count(id) from cl_borrow_repay_log
    	where TO_DAYS(repay_time)-TO_DAYS(SYSDATE())=0  
    </select>
    <!-- 统计历史放款总量 -->
    <select id="countBorrowLoanHistory" resultType="java.lang.Integer">
    	select count(id) from cl_borrow_progress where state = '30'
    </select>
    <!-- 统计历史还款总量 -->
    <select id="countBorrowRepayHistory" resultType="java.lang.Integer">
    	select count(id) from cl_borrow_repay where state = '10'
    </select>
    <!-- 待还款总额 -->
    <select id="sumBorrowNeedRepay" resultType="java.lang.Double">
    	select sum(amount+penalty_amout) from cl_borrow_repay where state = '20'
    </select>
    <!-- 逾期未还款总额 -->
    <select id="sumBorrowOverdueRepay" resultType="java.lang.Double">
    	select sum(amount+penalty_amout) from cl_borrow_repay where state = '20' and penalty_amout>0
    </select>
    
    <!-- 累计成功借款金额(按地区分组) -->
    <select id="sumBorrowAmtByProvince" resultType="java.lang.String">
    	SELECT SUM(amount) FROM `cl_borrow` WHERE state NOT IN (10,20,22,21,26,27) AND address LIKE #{address}
    </select>

    <!-- 累计还款金额(按地区分组) -->
    <select id="sumBorrowRepayByProvince" resultType="java.lang.String">
    	SELECT SUM(brl.amount) FROM `cl_borrow_repay_log` brl LEFT JOIN cl_borrow b ON brl.borrow_id = b.id WHERE b.address LIKE #{address}
    </select>
    
    <!-- 累计注册用户(按地区分组) -->
    <select id="countRegisterByProvince" resultType="java.lang.String">
    	SELECT COUNT(1) FROM cl_user_base_info WHERE register_addr LIKE #{address}
    </select>
    
    <!-- 最近15日每天放款量  -->
    <select id="countFifteenDaysLoan"  resultType="map">
    	select create_time 'key',count(DISTINCT t.borrow_id) 'value' from 
    		(select id,DATE_FORMAT(create_time,'%Y-%m-%d') create_time,borrow_id
    			from cl_borrow_progress 
    			where state = '30' 
    			<![CDATA[ and TO_DAYS(SYSDATE()) - TO_DAYS(create_time) <= 15  ]]>
    		) t 
    	GROUP BY create_time
    </select>
    <!-- 还款来源 10代扣，20银行卡转账，30支付宝转账， 40认证支付 -->
    <select id="countRepaySource" resultType="map">
    	select repay_way 'key',count(id) 'value' from (select id,case when repay_way = '10' then '自动代扣' when repay_way = '20' then '银行卡转账'  when repay_way = '30' then '支付宝转账' when repay_way = '40' then '认证支付'  end  repay_way from cl_borrow_repay_log ) t GROUP BY repay_way
    </select>
    <!-- 最近15日应还款量 -->
    <select id="countFifteenDaysNeedRepay" resultType="map">
    	<!-- select repay_time 'key',count(id) 'value' from 
    		(select id,DATE_FORMAT(repay_time,'%Y-%m-%d') repay_time 
				from cl_borrow_repay
				where 
				<![CDATA[  TO_DAYS(SYSDATE()) - TO_DAYS(repay_time) <= 15  and TO_DAYS(repay_time)-TO_DAYS(SYSDATE()) <=0 ]]>	
			) t 
		GROUP BY repay_time -->
		SELECT
			DATE_FORMAT(repay_time, '%Y-%m-%d') 'key',
			count(id) 'value',
			NOW()
		FROM
			(
				SELECT
					id,
					DATE_FORMAT(repay_time, '%Y-%m-%d') repay_time
				FROM
					cl_borrow_repay
				WHERE
					DATE_FORMAT(NOW(), '%Y-%m-%d') >= DATE_FORMAT(repay_time, '%Y-%m-%d')
			) t
		GROUP BY
			repay_time
    </select>
    <!-- 最近15日实际还款量 -->
    <select id="countFifteenDaysRealRepay" resultType="map">
    	select create_time 'key',count(id) 'value' from 
    		(select id,DATE_FORMAT(repay_time,'%Y-%m-%d') create_time 
    			from cl_borrow_repay_log 
    			where TO_DAYS(SYSDATE()) - TO_DAYS(repay_time) <![CDATA[<=]]> 15
    		) t 
    	GROUP BY create_time
    </select>

    <!-- 注册用户总数-->
	<select id="totalRegister" resultType="java.lang.Integer">
		select count(id) from cl_user
		where 1=1
	</select>

    <!--统计借款申请的数量-->
	<select id="totalBorrowApply" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		select count(id) from cl_borrow
		where 1=1
	</select>

	<!-- 统计借款申请通过的数量 -->
	<select id="totalBorrowApplyPass" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		select count(id) from cl_borrow_progress
		where  state in ('20','26')
	</select>

	<select id="listUserAuthByToday" resultType="com.xiji.cashloan.cl.domain.UserAuth">
		select auth.*
		from cl_user as usr left join cl_user_auth auth on usr.id = auth.user_id
		where TO_DAYS(usr.regist_time)-TO_DAYS(SYSDATE())=0
	</select>

	<select id="listBorrowByToday" resultType="com.xiji.cashloan.core.domain.Borrow" >
		select * from cl_borrow
    	where TO_DAYS(create_time)-TO_DAYS(SYSDATE())=0
	</select>

	<select id="listBorrowStatistics" resultType="com.xiji.cashloan.core.domain.Borrow">
		select borrow.*
		from cl_borrow as borrow ,cl_borrow_progress as progress
    	where TO_DAYS(progress.create_time)-TO_DAYS(SYSDATE())=0 and progress.state = '30' and borrow.id = progress.borrow_id;
	</select>

	<!--注册人数、实名认证人数、通讯录认证人数、当日绑卡人数、当日运营商认证人数、申请总数、新客借款，老客借款，放款笔数，当日新客放款，当日老客放款 -->
   <select id="listUserStatisticData" resultType="com.xiji.cashloan.cl.model.statistic.UserStatisticData" parameterType="java.util.HashMap">


   		select  distinct T.date,
                         T.userRegist,
                         T.authCount,
                         T.contactCount,
                         T.bankCount,
                         T.phoneCount,
                         T.borrowApplyCount,
                         T.newBorrowCount,
                         T.oldBorrowCount,
                         T.loadCount,
                         T.newLoadCount,
                         T.oldLoadCount
   		from (
	   		select DATE_FORMAT(p.time,'%Y-%m-%d') date,
					IFNULL(p2.userRegist,0) userRegist,
                    IFNULL(p3.authCount,0) authCount,
                    IFNULL(p4.contactCount,0) contactCount,
                    IFNULL(p5.bankCount,0) bankCount,
                    IFNULL(p6.phoneCount,0) phoneCount,
                    IFNULL(p7.borrowApplyCount,0) borrowApplyCount,
                    IFNULL(p8.newBorrowCount,0) newBorrowCount,
                    IFNULL(p9.oldBorrowCount,0) oldBorrowCount,
                    IFNULL(p10.loadCount,0) loadCount,
                    IFNULL(p11.newLoadCount,0) newLoadCount,
                    IFNULL(p12.oldLoadCount,0) oldLoadCount


	   		from (

                (SELECT COUNT(id) userRegist,DATE_FORMAT(regist_time,'%Y-%m-%d') time from cl_user t2 GROUP BY time ) UNION
                (SELECT COUNT(id) authCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.id_state = '30') t2 GROUP BY time )UNION
                (SELECT COUNT(id) contactCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.contact_state = '30') t2 GROUP BY time ) UNION
                (SELECT COUNT(id) bankCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.bank_card_state = '30') t2 GROUP BY time )UNION
	            (SELECT COUNT(id) phoneCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.phone_state = '30') t2 GROUP BY time ) UNION
                (SELECT COUNT(id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow ) t2 GROUP BY time ) UNION
                (SELECT COUNT(id) newBorrowCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow where again='10') t2 GROUP BY time ) UNION
                (SELECT COUNT(id) oldBorrowCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow where again='20') t2 GROUP BY time ) UNION

                (SELECT COUNT(id) loadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id ) t2 GROUP BY time) UNION
                (SELECT COUNT(id) newLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id and borrow.again ='10') t2 GROUP BY time) UNION
                (SELECT COUNT(id) oldLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id and borrow.again ='20') t2 GROUP BY time)

		) p
			left join (SELECT COUNT(id) userRegist,DATE_FORMAT(regist_time,'%Y-%m-%d') time from cl_user t2 GROUP BY time ) p2 on p.time = p2.time
            left join (SELECT COUNT(id) authCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.id_state = '30') t2 GROUP BY time ) p3 on p.time = p3.time
            left join (SELECT COUNT(id) contactCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.contact_state = '30') t2 GROUP BY time  ) p4 on p.time = p4.time
            left join (SELECT COUNT(id) bankCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.bank_card_state = '30') t2 GROUP BY time  ) p5 on p.time = p5.time
            left join (SELECT COUNT(id) phoneCount,DATE_FORMAT(regist_time,'%Y-%m-%d') time from (SELECT cu.id ,DATE_FORMAT(regist_time,'%Y-%m-%d') regist_time from cl_user cu left join cl_user_auth  cua on cu.id = cua.user_id where cua.phone_state = '30') t2 GROUP BY time ) p6 on p.time = p6.time

           left join (SELECT COUNT(id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow ) t2 GROUP BY time ) p7 on p.time = p7.time
           left join (SELECT COUNT(id) newBorrowCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow where again='10') t2 GROUP BY time ) p8 on p.time = p8.time
           left join (SELECT COUNT(id) oldBorrowCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow where again='20') t2 GROUP BY time) p9 on p.time = p9.time

           left join (SELECT COUNT(id) loadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id ) t2 GROUP BY time) p10 on p.time = p10.time
           left join (SELECT COUNT(id) newLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id and borrow.again ='10') t2 GROUP BY time) p11 on p.time = p11.time
           left join (SELECT COUNT(id) oldLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id and borrow.again ='20') t2 GROUP BY time) p12 on p.time = p12.time
	   <where>
		   <if test="startDate!=null and startDate!=''">
			   and p.time >= #{startDate,jdbcType=VARCHAR}
		   </if>
		   <if test="endDate!=null and endDate!=''">
			   <![CDATA[ and p.time <= #{endDate,jdbcType=VARCHAR} ]]>
		   </if>
	   </where>

		) T ORDER BY T.date DESC

   </select>


	<!-- 注册人数，申请订单数，机审通过数，机审拒绝数，人工通过数、人工拒绝数，首贷放款笔数、复贷放款笔数、逾期笔数 -->
	<select id="listChannelStatisticData" parameterType="java.util.HashMap" resultType="com.xiji.cashloan.cl.model.statistic.ChannelStatisticModel">

   		select  distinct T.date,
                         T.channelId,
                         T.userRegister,
                         T.borrowApplyCount,
                         T.machineAuditPassCount,
                         T.machineAuditNotPassCount,
                         T.reviewPassCount,
                         T.reviewNotPassCount,
                         T.firstLoadCount,
                         T.againLoadCount,
                         T.overdueCount,
                         T.firstOverdueCount



   		from (
	   		select DATE_FORMAT(p.time,'%Y-%m-%d') date,
                    IFNULL(p.channelId,0) channelId,
					IFNULL(p2.userRegister,0) userRegister,
                    IFNULL(p3.borrowApplyCount,0) borrowApplyCount,
                    IFNULL(p4.machineAuditPassCount,0) machineAuditPassCount,
                    IFNULL(p5.machineAuditNotPassCount,0) machineAuditNotPassCount,
                    IFNULL(p6.reviewPassCount,0) reviewPassCount,
                    IFNULL(p7.reviewNotPassCount,0) reviewNotPassCount,
                    IFNULL(p8.firstLoadCount,0) firstLoadCount,
                    IFNULL(p9.againLoadCount,0) againLoadCount,
                    IFNULL(p10.overdueCount,0) overdueCount,
                    IFNULL(p11.firstOverdueCount,0) firstOverdueCount


	   		from (

                (SELECT channel.id as channelId,COUNT(channel.id) userRegister,DATE_FORMAT(regist_time,'%Y-%m-%d') time from  cl_user t2 ,cl_channel as channel where channel.id = t2.channel_id GROUP BY time,channel.id ) UNION
                (SELECT t2.channelId as channelId, COUNT(t2.id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId,borrow.id,DATE_FORMAT(borrow.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow,cl_user usr,cl_channel as channel where borrow.user_id = usr.id and usr.channel_id = channel.id ) t2 GROUP BY time ,channelId) UNION
                (SELECT t2.channelId as channelId,COUNT(t2.id) machineAuditPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='22' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2 GROUP BY time,channelId ) UNION
                (SELECT t2.channelId as channelId,COUNT(t2.id) machineAuditNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='21' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2 GROUP BY time,channelId )UNION
                (SELECT t2.channelId as channelId,COUNT(t2.id) reviewPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='26' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2 GROUP BY time,channelId ) UNION
                (SELECT t2.channelId as channelId,COUNT(t2.id) reviewNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='27' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2 GROUP BY time,channelId ) UNION
                (SELECT t2.channelId as channelId,COUNT(t2.id) firstLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='30' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='10') t2 GROUP BY time,channelId ) UNION
                (SELECT t2.channelId as channelId,COUNT(t2.id) againLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='30' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='20') t2 GROUP BY time,channelId ) UNION
                (SELECT t2.channelId as channelId ,COUNT(t2.id) overdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(pl.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_pay_log as pl ,cl_user as usr ,cl_channel as channel where pl.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id and  pl.type=10 and pl.state=40 ) t2 GROUP BY time,channelId ) UNION
                (SELECT t2.channelId as channelId ,COUNT(t2.id) firstOverdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(pl.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_pay_log as pl ,cl_user as usr ,cl_channel as channel where pl.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id and  pl.type=10 and pl.state=40 and borrow.again='10') t2 GROUP BY time,channelId )

		) p
			left join (SELECT channel.id as channelId,COUNT(channel.id) userRegister,DATE_FORMAT(regist_time,'%Y-%m-%d') time from  cl_user t2 ,cl_channel as channel where channel.id = t2.channel_id GROUP BY time,channelId ) p2 on p.time = p2.time
            left join (SELECT t2.channelId as channelId, COUNT(t2.id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId,borrow.id,DATE_FORMAT(borrow.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow,cl_user usr,cl_channel as channel where borrow.user_id = usr.id and usr.channel_id = channel.id ) t2 GROUP BY time ,channelId) p3 on p.time = p3.time
            left join (SELECT t2.channelId as channelId,COUNT(t2.id) machineAuditPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='22' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2 GROUP BY time,channelId ) p4 on p.time = p4.time
            left join (SELECT t2.channelId as channelId,COUNT(t2.id) machineAuditNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='21' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2 GROUP BY time,channelId ) p5 on p.time = p5.time
            left join (SELECT t2.channelId as channelId,COUNT(t2.id) reviewPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='26' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2 GROUP BY time,channelId ) p6 on p.time = p6.time
            left join (SELECT t2.channelId as channelId,COUNT(t2.id) reviewNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='27' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id) t2 GROUP BY time,channelId ) p7 on p.time = p7.time
            left join (SELECT t2.channelId as channelId,COUNT(t2.id) firstLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='30' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='10' ) t2 GROUP BY time,channelId ) p8 on p.time = p8.time
            left join (SELECT t2.channelId as channelId,COUNT(t2.id) againLoadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId ,borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_user usr ,cl_channel as channel ,cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='30' and borrow.id = progress.borrow_id and usr.id =borrow.user_id and usr.channel_id = channel.id and borrow.again='20') t2 GROUP BY time,channelId ) p9 on p.time = p9.time
            left join (SELECT t2.channelId as channelId ,COUNT(t2.id) overdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(pl.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_pay_log as pl ,cl_user as usr ,cl_channel as channel where pl.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id and  pl.type=10 and pl.state=40 ) t2 GROUP BY time,channelId ) p10 on p.time = p10.time
            left join (SELECT t2.channelId as channelId ,COUNT(t2.id) firstOverdueCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT channel.id as channelId , borrow.id,DATE_FORMAT(pl.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow , cl_pay_log  as pl ,cl_user as usr ,cl_channel as channel where pl.borrow_id = borrow.id and usr.id = borrow.user_id and usr.channel_id = channel.id and  pl.type=10 and pl.state=40 and borrow.again='10') t2 GROUP BY time,channelId ) p11 on p.time = p11.time
        <where>
            <if test="startDate!=null and startDate!=''">
                and p.time >= #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and p.time <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
		) T ORDER BY T.date DESC
	</select>




</mapper>
