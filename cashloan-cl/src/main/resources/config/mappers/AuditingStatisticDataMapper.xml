<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_auditing_statistic_data表:审核统计数据模块 -->
<mapper namespace="com.xiji.cashloan.cl.mapper.statistic.AuditingStatisticDataMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.xiji.cashloan.cl.domain.statistic.AuditingStatisticData">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="count_time" property="countTime" jdbcType="TIMESTAMP" />
        <result column="borrow_apply_count" property="borrowApplyCount" jdbcType="INTEGER" />
        <result column="machine_audit_not_pass_count" property="machineAuditNotPassCount" jdbcType="INTEGER" />
        <result column="machine_audit_pass_count" property="machineAuditPassCount" jdbcType="INTEGER" />
        <result column="review_count" property="reviewCount" jdbcType="INTEGER" />
        <result column="review_pass_count" property="reviewPassCount" jdbcType="INTEGER" />
        <result column="review_not_pass_count" property="reviewNotPassCount" jdbcType="INTEGER" />
        <result column="machine_audit_pass_rate" property="machineAuditPassRate" jdbcType="DECIMAL" />
        <result column="machine_audit_not_pass_rate" property="machineAuditNotPassRate" jdbcType="DECIMAL" />
        <result column="review_pass_rate" property="reviewPassRate" jdbcType="DECIMAL" />
        <result column="review_not_pass_rate" property="reviewNotPassRate" jdbcType="DECIMAL" />
        <result column="load_count" property="loadCount" jdbcType="INTEGER" />
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,create_time,update_time,count_time,borrow_apply_count,machine_audit_not_pass_count,machine_audit_pass_count,review_count,review_pass_count,review_not_pass_count,machine_audit_pass_rate,machine_audit_not_pass_rate,review_pass_rate,review_not_pass_rate,load_count 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="countTime != null">
                and count_time = #{countTime,jdbcType=TIMESTAMP}
            </if>
            <if test="borrowApplyCount != null">
                and borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER}
            </if>
            <if test="machineAuditNotPassCount != null">
                and machine_audit_not_pass_count = #{machineAuditNotPassCount,jdbcType=INTEGER}
            </if>
            <if test="machineAuditPassCount != null">
                and machine_audit_pass_count = #{machineAuditPassCount,jdbcType=INTEGER}
            </if>
            <if test="reviewCount != null">
                and review_count = #{reviewCount,jdbcType=INTEGER}
            </if>
            <if test="reviewPassCount != null">
                and review_pass_count = #{reviewPassCount,jdbcType=INTEGER}
            </if>
            <if test="reviewNotPassCount != null">
                and review_not_pass_count = #{reviewNotPassCount,jdbcType=INTEGER}
            </if>
            <if test="machineAuditPassRate != null">
                and machine_audit_pass_rate = #{machineAuditPassRate,jdbcType=DECIMAL}
            </if>
            <if test="machineAuditNotPassRate != null">
                and machine_audit_not_pass_rate = #{machineAuditNotPassRate,jdbcType=DECIMAL}
            </if>
            <if test="reviewPassRate != null">
                and review_pass_rate = #{reviewPassRate,jdbcType=DECIMAL}
            </if>
            <if test="reviewNotPassRate != null">
                and review_not_pass_rate = #{reviewNotPassRate,jdbcType=DECIMAL}
            </if>
            <if test="loadCount != null">
                and load_count = #{loadCount,jdbcType=INTEGER}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.xiji.cashloan.cl.domain.statistic.AuditingStatisticData">
        insert into cl_auditing_statistic_data(create_time,update_time,count_time,borrow_apply_count,machine_audit_not_pass_count,machine_audit_pass_count,review_count,review_pass_count,review_not_pass_count,machine_audit_pass_rate,machine_audit_not_pass_rate,review_pass_rate,review_not_pass_rate,load_count)values(#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{countTime,jdbcType=TIMESTAMP},#{borrowApplyCount,jdbcType=INTEGER},#{machineAuditNotPassCount,jdbcType=INTEGER},#{machineAuditPassCount,jdbcType=INTEGER},#{reviewCount,jdbcType=INTEGER},#{reviewPassCount,jdbcType=INTEGER},#{reviewNotPassCount,jdbcType=INTEGER},#{machineAuditPassRate,jdbcType=DECIMAL},#{machineAuditNotPassRate,jdbcType=DECIMAL},#{reviewPassRate,jdbcType=DECIMAL},#{reviewNotPassRate,jdbcType=DECIMAL},#{loadCount,jdbcType=INTEGER})
    </insert>

    
    <update id="update" parameterType="com.xiji.cashloan.cl.domain.statistic.AuditingStatisticData">
        update cl_auditing_statistic_data set 
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            count_time = #{countTime,jdbcType=TIMESTAMP},
            borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER},
            machine_audit_not_pass_count = #{machineAuditNotPassCount,jdbcType=INTEGER},
            machine_audit_pass_count = #{machineAuditPassCount,jdbcType=INTEGER},
            review_count = #{reviewCount,jdbcType=INTEGER},
            review_pass_count = #{reviewPassCount,jdbcType=INTEGER},
            review_not_pass_count = #{reviewNotPassCount,jdbcType=INTEGER},
            machine_audit_pass_rate = #{machineAuditPassRate,jdbcType=DECIMAL},
            machine_audit_not_pass_rate = #{machineAuditNotPassRate,jdbcType=DECIMAL},
            review_pass_rate = #{reviewPassRate,jdbcType=DECIMAL},
            review_not_pass_rate = #{reviewNotPassRate,jdbcType=DECIMAL},
            load_count = #{loadCount,jdbcType=INTEGER}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_auditing_statistic_data
          <set>
            <if test="createTime != null">        
                create_time = #{createTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="updateTime != null">        
                update_time = #{updateTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="countTime != null">        
                count_time = #{countTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="borrowApplyCount != null">        
                borrow_apply_count = #{borrowApplyCount,jdbcType=INTEGER},                
            </if>
            <if test="machineAuditNotPassCount != null">        
                machine_audit_not_pass_count = #{machineAuditNotPassCount,jdbcType=INTEGER},                
            </if>
            <if test="machineAuditPassCount != null">        
                machine_audit_pass_count = #{machineAuditPassCount,jdbcType=INTEGER},                
            </if>
            <if test="reviewCount != null">        
                review_count = #{reviewCount,jdbcType=INTEGER},                
            </if>
            <if test="reviewPassCount != null">        
                review_pass_count = #{reviewPassCount,jdbcType=INTEGER},                
            </if>
            <if test="reviewNotPassCount != null">        
                review_not_pass_count = #{reviewNotPassCount,jdbcType=INTEGER},                
            </if>
            <if test="machineAuditPassRate != null">        
                machine_audit_pass_rate = #{machineAuditPassRate,jdbcType=DECIMAL},                
            </if>
            <if test="machineAuditNotPassRate != null">        
                machine_audit_not_pass_rate = #{machineAuditNotPassRate,jdbcType=DECIMAL},                
            </if>
            <if test="reviewPassRate != null">        
                review_pass_rate = #{reviewPassRate,jdbcType=DECIMAL},                
            </if>
            <if test="reviewNotPassRate != null">        
                review_not_pass_rate = #{reviewNotPassRate,jdbcType=DECIMAL},                
            </if>
            <if test="loadCount != null">        
                load_count = #{loadCount,jdbcType=INTEGER}                
            </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_auditing_statistic_data
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_auditing_statistic_data
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_auditing_statistic_data
        <include refid="searchBy"/>
    </select>

    <insert id="saveSelective" parameterType="com.xiji.cashloan.cl.domain.statistic.AuditingStatisticData">
        insert into cl_auditing_statistic_data
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="countTime != null">
                count_time,
            </if>
            <if test="borrowApplyCount != null">
                borrow_apply_count,
            </if>
            <if test="machineAuditNotPassCount != null">
                machine_audit_not_pass_count,
            </if>
            <if test="machineAuditPassCount != null">
                machine_audit_pass_count,
            </if>
            <if test="reviewCount != null">
                review_count,
            </if>
            <if test="reviewPassCount != null">
                review_pass_count,
            </if>
            <if test="reviewNotPassCount != null">
                review_not_pass_count,
            </if>
            <if test="machineAuditPassRate != null">
                machine_audit_pass_rate,
            </if>
            <if test="machineAuditNotPassRate != null">
                machine_audit_not_pass_rate,
            </if>
            <if test="reviewPassRate != null">
                review_pass_rate,
            </if>
            <if test="reviewNotPassRate != null">
                review_not_pass_rate,
            </if>
            <if test="loadCount != null">
                load_count,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="countTime != null">
                #{countTime,jdbcType=TIMESTAMP},
            </if>
            <if test="borrowApplyCount != null">
                #{borrowApplyCount,jdbcType=INTEGER},
            </if>
            <if test="machineAuditNotPassCount != null">
                #{machineAuditNotPassCount,jdbcType=INTEGER},
            </if>
            <if test="machineAuditPassCount != null">
                #{machineAuditPassCount,jdbcType=INTEGER},
            </if>
            <if test="reviewCount != null">
                #{reviewCount,jdbcType=INTEGER},
            </if>
            <if test="reviewPassCount != null">
                #{reviewPassCount,jdbcType=INTEGER},
            </if>
            <if test="reviewNotPassCount != null">
                #{reviewNotPassCount,jdbcType=INTEGER},
            </if>
            <if test="machineAuditPassRate != null">
                #{machineAuditPassRate,jdbcType=DECIMAL},
            </if>
            <if test="machineAuditNotPassRate != null">
                #{machineAuditNotPassRate,jdbcType=DECIMAL},
            </if>
            <if test="reviewPassRate != null">
                #{reviewPassRate,jdbcType=DECIMAL},
            </if>
            <if test="reviewNotPassRate != null">
                #{reviewNotPassRate,jdbcType=DECIMAL},
            </if>
            <if test="loadCount != null">
                #{loadCount,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <select id="getLateDate" resultType="java.util.Date">
      select count_time from cl_auditing_statistic_data order by count_time desc limit 1;
    </select>


    <select id="listAuditingStatisticData" resultMap="BaseResultMap" parameterType="java.util.HashMap">

       select  distinct T.countTime,
                         T.borrowApplyCount,
                         T.machineAuditPassCount,
                         T.machineAuditNotPassCount,
                         T.reviewCount,
                         T.reviewPassCount,
                         T.reviewNotPassCount,
                         T.loadCount

   		from (
	   		select DATE_FORMAT(p.time,'%Y-%m-%d') countTime,

                    IFNULL(p1.borrowApplyCount,0) borrowApplyCount,
                    IFNULL(p2.machineAuditPassCount,0) machineAuditPassCount,
                    IFNULL(p3.machineAuditNotPassCount,0) machineAuditNotPassCount,
                    IFNULL(p4.reviewCount,0) reviewCount,
                    IFNULL(p5.reviewPassCount,0) reviewPassCount,
                    IFNULL(p6.reviewNotPassCount,0) reviewNotPassCount,
                    IFNULL(p7.loadCount,0) loadCount


	   		from (

                (SELECT COUNT(id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow ) t2 GROUP BY time ) UNION

                (SELECT COUNT(id) machineAuditPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='22' and borrow.id = progress.borrow_id ) t2 GROUP BY time ) UNION

                (SELECT COUNT(id) machineAuditNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='21' and borrow.id = progress.borrow_id ) t2 GROUP BY time ) UNION

                (SELECT COUNT(id) reviewCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(manual.review_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_manual_review_order as manual where  borrow.id = manual.borrow_id and manual.state in ('20','30') ) t2 GROUP BY time ) UNION

                (SELECT COUNT(id) reviewPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(manual.review_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_manual_review_order as manual where  borrow.id = manual.borrow_id and manual.state ='20' ) t2 GROUP BY time ) UNION

                (SELECT COUNT(id) reviewNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(manual.review_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_manual_review_order as manual where  borrow.id = manual.borrow_id and manual.state ='30' ) t2 GROUP BY time ) UNION

                (SELECT COUNT(id) loadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id ) t2 GROUP BY time)

		) p

           left join (SELECT COUNT(id) borrowApplyCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT id,DATE_FORMAT(create_time, '%Y-%m-%d') regist_time FROM cl_borrow ) t2 GROUP BY time ) p1 on p.time = p1.time

           left join (SELECT COUNT(id) machineAuditPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='22' and borrow.id = progress.borrow_id ) t2 GROUP BY time ) p2 on p.time = p2.time

           left join (SELECT COUNT(id) machineAuditNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state ='21' and borrow.id = progress.borrow_id ) t2 GROUP BY time ) p3 on p.time = p3.time

           left join (SELECT COUNT(id) reviewCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(manual.review_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_manual_review_order as manual where  borrow.id = manual.borrow_id and manual.state in ('20','30') ) t2 GROUP BY time ) p4 on p.time = p4.time

           left join (SELECT COUNT(id) reviewPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(manual.review_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_manual_review_order as manual where  borrow.id = manual.borrow_id and manual.state ='20' ) t2 GROUP BY time ) p5 on p.time = p5.time

           left join (SELECT COUNT(id) reviewNotPassCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(manual.review_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_manual_review_order as manual where  borrow.id = manual.borrow_id and manual.state ='30') t2 GROUP BY time ) p6 on p.time = p6.time

           left join (SELECT COUNT(id) loadCount,DATE_FORMAT(regist_time, '%Y-%m-%d') time FROM ( SELECT borrow.id,DATE_FORMAT(progress.create_time, '%Y-%m-%d') regist_time FROM cl_borrow as borrow ,cl_borrow_progress as progress where progress.state = '30' and borrow.id = progress.borrow_id ) t2 GROUP BY time) p7 on p.time = p7.time

        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(p.time, '%Y-%m-%d') > #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(p.time, '%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>

		) T ORDER BY T.countTime ASC

    </select>

    <select id="listAuditingStatistic" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select * from cl_auditing_statistic_data
        <where>
            <if test="startDate!=null and startDate!=''">
                and DATE_FORMAT(count_time,'%Y-%m-%d') >= #{startDate,jdbcType=VARCHAR}
            </if>
            <if test="endDate!=null and endDate!=''">
                <![CDATA[ and DATE_FORMAT(count_time,'%Y-%m-%d') <= #{endDate,jdbcType=VARCHAR} ]]>
            </if>
        </where>
        order by count_time desc
    </select>
</mapper>
