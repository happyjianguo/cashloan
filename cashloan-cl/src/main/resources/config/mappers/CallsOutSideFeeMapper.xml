<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_calls_outside_fee表:调用外部数据收费信息模块 -->
<mapper namespace="com.xiji.cashloan.cl.mapper.CallsOutSideFeeMapper">
    <!--返回Map-->        
    <resultMap id="BaseResultMap" type="com.xiji.cashloan.cl.domain.CallsOutSideFee">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="task_id" property="taskId" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="fee" property="fee" jdbcType="DECIMAL" />
        <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
        <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
        <result column="cast_type" property="castType" jdbcType="INTEGER"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
    </resultMap>
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="Base_Column_List">
        id,user_id,task_id,type,fee,gmt_create,gmt_modified,cast_type,phone
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="taskId != null and taskId != ''">
                and task_id = #{taskId,jdbcType=VARCHAR}
            </if>
            <if test="type != null">
                and type = #{type,jdbcType=INTEGER}
            </if>
            <if test="fee != null">
                and fee = #{fee,jdbcType=DECIMAL}
            </if>
            <if test="gmtCreate != null">
                and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
            </if>
            <if test="gmtModified != null">
                and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
            </if>
            <if test="castType != null">
                and cast_type = #{castType,jdbcType=INTEGER}
            </if>
            <if test="phone != null and phone != ''">
                and phone =  #{phone,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>
    
    
    <insert id="save" parameterType="com.xiji.cashloan.cl.domain.CallsOutSideFee">
        insert into cl_calls_outside_fee(user_id,task_id,type,fee,gmt_create,gmt_modified,cast_type,phone)values(#{userId,jdbcType=BIGINT},#{taskId,jdbcType=VARCHAR},#{type,jdbcType=INTEGER},#{fee,jdbcType=DECIMAL},#{gmtCreate,jdbcType=TIMESTAMP},#{gmtModified,jdbcType=TIMESTAMP},#{castType,jdbcType=INTEGER},#{phone,jdbcType=VARCHAR})
    </insert>

    
    <update id="update" parameterType="com.xiji.cashloan.cl.domain.CallsOutSideFee">
        update cl_calls_outside_fee set 
            user_id = #{userId,jdbcType=BIGINT},
            task_id = #{taskId,jdbcType=VARCHAR},
            type = #{type,jdbcType=INTEGER},
            fee = #{fee,jdbcType=DECIMAL},
            gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            cast_type = #{castType,jdbcType=INTEGER},
            phone = #{phone,jdbcType=VARCHAR}
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <update id="updateSelective"  parameterType="java.util.HashMap">
        update cl_calls_outside_fee
          <set>
            <if test="userId != null">        
                user_id = #{userId,jdbcType=BIGINT},                
            </if>
            <if test="taskId != null and taskId != '' ">
                task_id = #{taskId,jdbcType=VARCHAR},                
            </if>
            <if test="type != null">        
                type = #{type,jdbcType=INTEGER},                
            </if>
            <if test="fee != null">        
                fee = #{fee,jdbcType=DECIMAL},                
            </if>
            <if test="gmtCreate != null">        
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},                
            </if>
            <if test="gmtModified != null">        
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},                
            </if>
              <if test="castType != null">
                  cast_type = #{castType,jdbcType = INTEGER},
              </if>
              <if test="phone != null and phone !=''">
                  phone = #{phone,jdbcType=VARCHAR}
              </if>
        </set>    
        where id = #{id ,jdbcType=INTEGER}
    </update>


    <select id="findByPrimary" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from cl_calls_outside_fee
        where id = #{id,jdbcType=INTEGER}
    </select>

	<select id="findSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_calls_outside_fee
        <include refid="searchBy"/>
    </select>
               
    <select id="listSelective" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_calls_outside_fee
        <include refid="searchBy"/>
    </select>

    <select id="getByTaskId" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from cl_calls_outside_fee
        where task_id = #{taskId,jdbcType=VARCHAR}
    </select>
    <select id="listCallsOutSideFee" resultMap="BaseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="Base_Column_List" />
        from cl_calls_outside_fee
        <where>
            <trim prefixOverrides="and">
                <if test="type != null">
                    and type = #{type,jdbcType=INTEGER}
                </if>

                <if test="castType != null">
                    and cast_type = #{castType,jdbcType = INTEGER}
                </if>
                <if test="startTime != null and startTime != ''">
                    and DATE_FORMAT(gmt_create,'%Y-%m-%d') &gt;= #{startTime,jdbcType=TIMESTAMP}
                </if>
                <if test="endTime != null and endTime != ''">
                    and DATE_FORMAT(gmt_create,'%Y-%m-%d') &lt;= #{endTime,jdbcType=TIMESTAMP}
                </if>
            </trim>
        </where>
        order by  gmt_create desc
    </select>

    <select id="getTotalFee" resultType="decimal" parameterType="java.util.HashMap">
        SELECT SUM(fee) as totalFee
        FROM cl_calls_outside_fee
        <where>
            <trim prefixOverrides="and">
                <if test="type != null">
                    and type = #{type,jdbcType=INTEGER}
                </if>
                    and fee <![CDATA[ < ]]> 0
                <if test="castType != null">
                    and cast_type = #{castType,jdbcType = INTEGER}
                </if>
                <if test="startTime != null and startTime != ''">
                    and DATE_FORMAT(gmt_create,'%Y-%m-%d') &gt;= #{startTime,jdbcType=TIMESTAMP}
                </if>
                <if test="endTime != null and endTime != ''">
                    and DATE_FORMAT(gmt_create,'%Y-%m-%d') &lt;= #{endTime,jdbcType=TIMESTAMP}
                </if>
            </trim>
        </where>
    </select>
    <select id="getBalance" resultType="decimal" parameterType="java.util.HashMap">
        SELECT SUM(fee) as totalFee
        FROM cl_calls_outside_fee
        <where>
            <trim prefixOverrides="and">
                <if test="startTime != null and startTime != ''">
                    and DATE_FORMAT(gmt_create,'%Y-%m-%d') &gt;= #{startTime,jdbcType=TIMESTAMP}
                </if>
                <if test="endTime != null and endTime != ''">
                    and DATE_FORMAT(gmt_create,'%Y-%m-%d') &lt;= #{endTime,jdbcType=TIMESTAMP}
                </if>
            </trim>
        </where>
    </select>
</mapper>
